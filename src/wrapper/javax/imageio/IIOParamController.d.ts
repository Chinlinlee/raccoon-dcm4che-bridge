import { JavaClass, InterfaceProxyOptions, JavaInterfaceProxy } from "java-bridge";
import { IIOParam as javax_imageio_IIOParam } from "./IIOParam";
/**
 * This class just defines types, you should import {@link IIOParamController} instead of this.
 * This was generated by java-bridge.
 * You should probably not edit this.
 */
export declare class IIOParamControllerClass extends JavaClass {
    /**
     * @param var0 original type: 'javax.imageio.IIOParam'
     * @return original return type: 'boolean'
     */
    activate(var0: javax_imageio_IIOParam | null): Promise<boolean>;
    /**
     * @param var0 original type: 'javax.imageio.IIOParam'
     * @return original return type: 'boolean'
     */
    activateSync(var0: javax_imageio_IIOParam | null): boolean;
}
/**
 * This interface just defines types for creating proxies,
 * you should use {@link createIIOParamControllerProxy} for actually creating the proxies.
 *
 * Optional methods in here may still be required by java.
 * This is caused by typescript not allowing to have both optional and
 * non-optional signatures for the same interface member.
 *
 * This was generated by java-bridge.
 * You should probably not edit this.
 */
export interface IIOParamControllerInterface {
    /**
     * @param var0 original type: 'javax.imageio.IIOParam'
     * @return original return type: 'boolean'
     */
    activate(var0: javax_imageio_IIOParam | null): boolean;
}
/**
 * Create a proxy for the {@link IIOParamController} interface.
 * All required methods in {@link IIOParamControllerInterface} must be implemented.
 *
 * @param methods the methods to implement
 * @param opts the proxy options
 * @return the proxy
 */
export declare function createIIOParamControllerProxy(methods: IIOParamControllerInterface, opts?: InterfaceProxyOptions): JavaInterfaceProxy<IIOParamControllerInterface>;
declare const IIOParamController_base: typeof IIOParamControllerClass;
/**
 * Class javax.imageio.IIOParamController.
 *
 * This actually imports the java class for further use.
 * The class {@link IIOParamControllerClass} only defines types, this is the class you should actually import.
 * Please note that this statement imports the underlying java class at runtime, which may take a while.
 * This was generated by java-bridge.
 * You should probably not edit this.
 */
export declare class IIOParamController extends IIOParamController_base {
    /**
     * Private constructor to prevent instantiation
     * as this is either an abstract class or an interface
     */
    private constructor();
}
export default IIOParamController;
