import { JavaClass, InterfaceProxyOptions, JavaInterfaceProxy } from "java-bridge";
import { ImageReader as javax_imageio_ImageReader } from "./../ImageReader";
import { BufferedImage as java_awt_image_BufferedImage } from "./../../../java/awt/image/BufferedImage";
import { Integer as java_lang_Integer } from "./../../../java/lang/Integer";
/**
 * This class just defines types, you should import {@link IIOReadUpdateListener} instead of this.
 * This was generated by java-bridge.
 * You should probably not edit this.
 */
export declare class IIOReadUpdateListenerClass extends JavaClass {
    /**
     * @param var0 original type: 'javax.imageio.ImageReader'
     * @param var1 original type: 'java.awt.image.BufferedImage'
     * @param var2 original type: 'int'
     * @param var3 original type: 'int'
     * @param var4 original type: 'int'
     * @param var5 original type: 'int'
     * @param var6 original type: 'int'
     * @param var7 original type: 'int'
     * @param var8 original type: 'int[]'
     * @return original return type: 'void'
     */
    imageUpdate(var0: javax_imageio_ImageReader | null, var1: java_awt_image_BufferedImage | null, var2: java_lang_Integer | number, var3: java_lang_Integer | number, var4: java_lang_Integer | number, var5: java_lang_Integer | number, var6: java_lang_Integer | number, var7: java_lang_Integer | number, var8: (java_lang_Integer | number)[] | null): Promise<void>;
    /**
     * @param var0 original type: 'javax.imageio.ImageReader'
     * @param var1 original type: 'java.awt.image.BufferedImage'
     * @param var2 original type: 'int'
     * @param var3 original type: 'int'
     * @param var4 original type: 'int'
     * @param var5 original type: 'int'
     * @param var6 original type: 'int'
     * @param var7 original type: 'int'
     * @param var8 original type: 'int[]'
     * @return original return type: 'void'
     */
    imageUpdateSync(var0: javax_imageio_ImageReader | null, var1: java_awt_image_BufferedImage | null, var2: java_lang_Integer | number, var3: java_lang_Integer | number, var4: java_lang_Integer | number, var5: java_lang_Integer | number, var6: java_lang_Integer | number, var7: java_lang_Integer | number, var8: (java_lang_Integer | number)[] | null): void;
    /**
     * @param var0 original type: 'javax.imageio.ImageReader'
     * @param var1 original type: 'java.awt.image.BufferedImage'
     * @return original return type: 'void'
     */
    thumbnailPassComplete(var0: javax_imageio_ImageReader | null, var1: java_awt_image_BufferedImage | null): Promise<void>;
    /**
     * @param var0 original type: 'javax.imageio.ImageReader'
     * @param var1 original type: 'java.awt.image.BufferedImage'
     * @return original return type: 'void'
     */
    thumbnailPassCompleteSync(var0: javax_imageio_ImageReader | null, var1: java_awt_image_BufferedImage | null): void;
    /**
     * @param var0 original type: 'javax.imageio.ImageReader'
     * @param var1 original type: 'java.awt.image.BufferedImage'
     * @return original return type: 'void'
     */
    passComplete(var0: javax_imageio_ImageReader | null, var1: java_awt_image_BufferedImage | null): Promise<void>;
    /**
     * @param var0 original type: 'javax.imageio.ImageReader'
     * @param var1 original type: 'java.awt.image.BufferedImage'
     * @return original return type: 'void'
     */
    passCompleteSync(var0: javax_imageio_ImageReader | null, var1: java_awt_image_BufferedImage | null): void;
    /**
     * @param var0 original type: 'javax.imageio.ImageReader'
     * @param var1 original type: 'java.awt.image.BufferedImage'
     * @param var2 original type: 'int'
     * @param var3 original type: 'int'
     * @param var4 original type: 'int'
     * @param var5 original type: 'int'
     * @param var6 original type: 'int'
     * @param var7 original type: 'int'
     * @param var8 original type: 'int[]'
     * @return original return type: 'void'
     */
    thumbnailUpdate(var0: javax_imageio_ImageReader | null, var1: java_awt_image_BufferedImage | null, var2: java_lang_Integer | number, var3: java_lang_Integer | number, var4: java_lang_Integer | number, var5: java_lang_Integer | number, var6: java_lang_Integer | number, var7: java_lang_Integer | number, var8: (java_lang_Integer | number)[] | null): Promise<void>;
    /**
     * @param var0 original type: 'javax.imageio.ImageReader'
     * @param var1 original type: 'java.awt.image.BufferedImage'
     * @param var2 original type: 'int'
     * @param var3 original type: 'int'
     * @param var4 original type: 'int'
     * @param var5 original type: 'int'
     * @param var6 original type: 'int'
     * @param var7 original type: 'int'
     * @param var8 original type: 'int[]'
     * @return original return type: 'void'
     */
    thumbnailUpdateSync(var0: javax_imageio_ImageReader | null, var1: java_awt_image_BufferedImage | null, var2: java_lang_Integer | number, var3: java_lang_Integer | number, var4: java_lang_Integer | number, var5: java_lang_Integer | number, var6: java_lang_Integer | number, var7: java_lang_Integer | number, var8: (java_lang_Integer | number)[] | null): void;
    /**
     * @param var0 original type: 'javax.imageio.ImageReader'
     * @param var1 original type: 'java.awt.image.BufferedImage'
     * @param var2 original type: 'int'
     * @param var3 original type: 'int'
     * @param var4 original type: 'int'
     * @param var5 original type: 'int'
     * @param var6 original type: 'int'
     * @param var7 original type: 'int'
     * @param var8 original type: 'int'
     * @param var9 original type: 'int[]'
     * @return original return type: 'void'
     */
    passStarted(var0: javax_imageio_ImageReader | null, var1: java_awt_image_BufferedImage | null, var2: java_lang_Integer | number, var3: java_lang_Integer | number, var4: java_lang_Integer | number, var5: java_lang_Integer | number, var6: java_lang_Integer | number, var7: java_lang_Integer | number, var8: java_lang_Integer | number, var9: (java_lang_Integer | number)[] | null): Promise<void>;
    /**
     * @param var0 original type: 'javax.imageio.ImageReader'
     * @param var1 original type: 'java.awt.image.BufferedImage'
     * @param var2 original type: 'int'
     * @param var3 original type: 'int'
     * @param var4 original type: 'int'
     * @param var5 original type: 'int'
     * @param var6 original type: 'int'
     * @param var7 original type: 'int'
     * @param var8 original type: 'int'
     * @param var9 original type: 'int[]'
     * @return original return type: 'void'
     */
    passStartedSync(var0: javax_imageio_ImageReader | null, var1: java_awt_image_BufferedImage | null, var2: java_lang_Integer | number, var3: java_lang_Integer | number, var4: java_lang_Integer | number, var5: java_lang_Integer | number, var6: java_lang_Integer | number, var7: java_lang_Integer | number, var8: java_lang_Integer | number, var9: (java_lang_Integer | number)[] | null): void;
    /**
     * @param var0 original type: 'javax.imageio.ImageReader'
     * @param var1 original type: 'java.awt.image.BufferedImage'
     * @param var2 original type: 'int'
     * @param var3 original type: 'int'
     * @param var4 original type: 'int'
     * @param var5 original type: 'int'
     * @param var6 original type: 'int'
     * @param var7 original type: 'int'
     * @param var8 original type: 'int'
     * @param var9 original type: 'int[]'
     * @return original return type: 'void'
     */
    thumbnailPassStarted(var0: javax_imageio_ImageReader | null, var1: java_awt_image_BufferedImage | null, var2: java_lang_Integer | number, var3: java_lang_Integer | number, var4: java_lang_Integer | number, var5: java_lang_Integer | number, var6: java_lang_Integer | number, var7: java_lang_Integer | number, var8: java_lang_Integer | number, var9: (java_lang_Integer | number)[] | null): Promise<void>;
    /**
     * @param var0 original type: 'javax.imageio.ImageReader'
     * @param var1 original type: 'java.awt.image.BufferedImage'
     * @param var2 original type: 'int'
     * @param var3 original type: 'int'
     * @param var4 original type: 'int'
     * @param var5 original type: 'int'
     * @param var6 original type: 'int'
     * @param var7 original type: 'int'
     * @param var8 original type: 'int'
     * @param var9 original type: 'int[]'
     * @return original return type: 'void'
     */
    thumbnailPassStartedSync(var0: javax_imageio_ImageReader | null, var1: java_awt_image_BufferedImage | null, var2: java_lang_Integer | number, var3: java_lang_Integer | number, var4: java_lang_Integer | number, var5: java_lang_Integer | number, var6: java_lang_Integer | number, var7: java_lang_Integer | number, var8: java_lang_Integer | number, var9: (java_lang_Integer | number)[] | null): void;
}
/**
 * This interface just defines types for creating proxies,
 * you should use {@link createIIOReadUpdateListenerProxy} for actually creating the proxies.
 *
 * Optional methods in here may still be required by java.
 * This is caused by typescript not allowing to have both optional and
 * non-optional signatures for the same interface member.
 *
 * This was generated by java-bridge.
 * You should probably not edit this.
 */
export interface IIOReadUpdateListenerInterface {
    /**
     * @param var0 original type: 'javax.imageio.ImageReader'
     * @param var1 original type: 'java.awt.image.BufferedImage'
     * @param var2 original type: 'int'
     * @param var3 original type: 'int'
     * @param var4 original type: 'int'
     * @param var5 original type: 'int'
     * @param var6 original type: 'int'
     * @param var7 original type: 'int'
     * @param var8 original type: 'int[]'
     * @return original return type: 'void'
     */
    imageUpdate(var0: javax_imageio_ImageReader | null, var1: java_awt_image_BufferedImage | null, var2: java_lang_Integer | number, var3: java_lang_Integer | number, var4: java_lang_Integer | number, var5: java_lang_Integer | number, var6: java_lang_Integer | number, var7: java_lang_Integer | number, var8: (java_lang_Integer | number)[] | null): void;
    /**
     * @param var0 original type: 'javax.imageio.ImageReader'
     * @param var1 original type: 'java.awt.image.BufferedImage'
     * @return original return type: 'void'
     */
    thumbnailPassComplete(var0: javax_imageio_ImageReader | null, var1: java_awt_image_BufferedImage | null): void;
    /**
     * @param var0 original type: 'javax.imageio.ImageReader'
     * @param var1 original type: 'java.awt.image.BufferedImage'
     * @return original return type: 'void'
     */
    passComplete(var0: javax_imageio_ImageReader | null, var1: java_awt_image_BufferedImage | null): void;
    /**
     * @param var0 original type: 'javax.imageio.ImageReader'
     * @param var1 original type: 'java.awt.image.BufferedImage'
     * @param var2 original type: 'int'
     * @param var3 original type: 'int'
     * @param var4 original type: 'int'
     * @param var5 original type: 'int'
     * @param var6 original type: 'int'
     * @param var7 original type: 'int'
     * @param var8 original type: 'int[]'
     * @return original return type: 'void'
     */
    thumbnailUpdate(var0: javax_imageio_ImageReader | null, var1: java_awt_image_BufferedImage | null, var2: java_lang_Integer | number, var3: java_lang_Integer | number, var4: java_lang_Integer | number, var5: java_lang_Integer | number, var6: java_lang_Integer | number, var7: java_lang_Integer | number, var8: (java_lang_Integer | number)[] | null): void;
    /**
     * @param var0 original type: 'javax.imageio.ImageReader'
     * @param var1 original type: 'java.awt.image.BufferedImage'
     * @param var2 original type: 'int'
     * @param var3 original type: 'int'
     * @param var4 original type: 'int'
     * @param var5 original type: 'int'
     * @param var6 original type: 'int'
     * @param var7 original type: 'int'
     * @param var8 original type: 'int'
     * @param var9 original type: 'int[]'
     * @return original return type: 'void'
     */
    passStarted(var0: javax_imageio_ImageReader | null, var1: java_awt_image_BufferedImage | null, var2: java_lang_Integer | number, var3: java_lang_Integer | number, var4: java_lang_Integer | number, var5: java_lang_Integer | number, var6: java_lang_Integer | number, var7: java_lang_Integer | number, var8: java_lang_Integer | number, var9: (java_lang_Integer | number)[] | null): void;
    /**
     * @param var0 original type: 'javax.imageio.ImageReader'
     * @param var1 original type: 'java.awt.image.BufferedImage'
     * @param var2 original type: 'int'
     * @param var3 original type: 'int'
     * @param var4 original type: 'int'
     * @param var5 original type: 'int'
     * @param var6 original type: 'int'
     * @param var7 original type: 'int'
     * @param var8 original type: 'int'
     * @param var9 original type: 'int[]'
     * @return original return type: 'void'
     */
    thumbnailPassStarted(var0: javax_imageio_ImageReader | null, var1: java_awt_image_BufferedImage | null, var2: java_lang_Integer | number, var3: java_lang_Integer | number, var4: java_lang_Integer | number, var5: java_lang_Integer | number, var6: java_lang_Integer | number, var7: java_lang_Integer | number, var8: java_lang_Integer | number, var9: (java_lang_Integer | number)[] | null): void;
}
/**
 * Create a proxy for the {@link IIOReadUpdateListener} interface.
 * All required methods in {@link IIOReadUpdateListenerInterface} must be implemented.
 *
 * @param methods the methods to implement
 * @param opts the proxy options
 * @return the proxy
 */
export declare function createIIOReadUpdateListenerProxy(methods: IIOReadUpdateListenerInterface, opts?: InterfaceProxyOptions): JavaInterfaceProxy<IIOReadUpdateListenerInterface>;
declare const IIOReadUpdateListener_base: typeof IIOReadUpdateListenerClass;
/**
 * Class javax.imageio.event.IIOReadUpdateListener.
 *
 * This actually imports the java class for further use.
 * The class {@link IIOReadUpdateListenerClass} only defines types, this is the class you should actually import.
 * Please note that this statement imports the underlying java class at runtime, which may take a while.
 * This was generated by java-bridge.
 * You should probably not edit this.
 */
export declare class IIOReadUpdateListener extends IIOReadUpdateListener_base {
    /**
     * Private constructor to prevent instantiation
     * as this is either an abstract class or an interface
     */
    private constructor();
}
export default IIOReadUpdateListener;
//# sourceMappingURL=IIOReadUpdateListener.d.ts.map