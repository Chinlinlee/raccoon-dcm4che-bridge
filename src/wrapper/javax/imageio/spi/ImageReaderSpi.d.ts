import { JavaClass, BasicOrJavaType } from "java-bridge";
import { Class as java_lang_Class } from "./../../../java/lang/Class";
import { Long as java_lang_Long } from "./../../../java/lang/Long";
import { Integer as java_lang_Integer } from "./../../../java/lang/Integer";
import { IIOMetadataFormat as javax_imageio_metadata_IIOMetadataFormat } from "./../metadata/IIOMetadataFormat";
import { Locale as java_util_Locale } from "./../../../java/util/Locale";
import { ImageReader as javax_imageio_ImageReader } from "./../ImageReader";
import { ServiceRegistry as javax_imageio_spi_ServiceRegistry } from "./ServiceRegistry";
/**
 * This class just defines types, you should import {@link ImageReaderSpi} instead of this.
 * This was generated by java-bridge.
 * You should probably not edit this.
 */
export declare class ImageReaderSpiClass extends JavaClass {
    /**
     * @return original return type: 'java.lang.Class'
     */
    getClass(): Promise<java_lang_Class>;
    /**
     * @return original return type: 'java.lang.Class'
     */
    getClassSync(): java_lang_Class;
    /**
     * @param var0 original type: 'long'
     * @param var1 original type: 'int'
     * @return original return type: 'void'
     */
    wait(var0: java_lang_Long | bigint | number, var1: java_lang_Integer | number): Promise<void>;
    /**
     * @param var0 original type: 'long'
     * @param var1 original type: 'int'
     * @return original return type: 'void'
     */
    waitSync(var0: java_lang_Long | bigint | number, var1: java_lang_Integer | number): void;
    /**
     * @return original return type: 'void'
     */
    wait(): Promise<void>;
    /**
     * @return original return type: 'void'
     */
    waitSync(): void;
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'void'
     */
    wait(var0: java_lang_Long | bigint | number): Promise<void>;
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'void'
     */
    waitSync(var0: java_lang_Long | bigint | number): void;
    /**
     * @return original return type: 'void'
     */
    notifyAll(): Promise<void>;
    /**
     * @return original return type: 'void'
     */
    notifyAllSync(): void;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'javax.imageio.metadata.IIOMetadataFormat'
     */
    getImageMetadataFormat(var0: string | null): Promise<javax_imageio_metadata_IIOMetadataFormat | null>;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'javax.imageio.metadata.IIOMetadataFormat'
     */
    getImageMetadataFormatSync(var0: string | null): javax_imageio_metadata_IIOMetadataFormat | null;
    /**
     * @return original return type: 'boolean'
     */
    isStandardStreamMetadataFormatSupported(): Promise<boolean>;
    /**
     * @return original return type: 'boolean'
     */
    isStandardStreamMetadataFormatSupportedSync(): boolean;
    /**
     * @return original return type: 'boolean'
     */
    isStandardImageMetadataFormatSupported(): Promise<boolean>;
    /**
     * @return original return type: 'boolean'
     */
    isStandardImageMetadataFormatSupportedSync(): boolean;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'javax.imageio.metadata.IIOMetadataFormat'
     */
    getStreamMetadataFormat(var0: string | null): Promise<javax_imageio_metadata_IIOMetadataFormat | null>;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'javax.imageio.metadata.IIOMetadataFormat'
     */
    getStreamMetadataFormatSync(var0: string | null): javax_imageio_metadata_IIOMetadataFormat | null;
    /**
     * @return original return type: 'java.lang.String'
     */
    getVendorName(): Promise<string | null>;
    /**
     * @return original return type: 'java.lang.String'
     */
    getVendorNameSync(): string | null;
    /**
     * @return original return type: 'java.lang.Class[]'
     */
    getInputTypes(): Promise<(java_lang_Class | null)[] | null>;
    /**
     * @return original return type: 'java.lang.Class[]'
     */
    getInputTypesSync(): (java_lang_Class | null)[] | null;
    /**
     * @return original return type: 'java.lang.String[]'
     */
    getFileSuffixes(): Promise<(string | null)[] | null>;
    /**
     * @return original return type: 'java.lang.String[]'
     */
    getFileSuffixesSync(): (string | null)[] | null;
    /**
     * @return original return type: 'java.lang.String'
     */
    getNativeImageMetadataFormatName(): Promise<string | null>;
    /**
     * @return original return type: 'java.lang.String'
     */
    getNativeImageMetadataFormatNameSync(): string | null;
    /**
     * @return original return type: 'java.lang.String[]'
     */
    getImageWriterSpiNames(): Promise<(string | null)[] | null>;
    /**
     * @return original return type: 'java.lang.String[]'
     */
    getImageWriterSpiNamesSync(): (string | null)[] | null;
    /**
     * @return original return type: 'java.lang.String[]'
     */
    getExtraImageMetadataFormatNames(): Promise<(string | null)[] | null>;
    /**
     * @return original return type: 'java.lang.String[]'
     */
    getExtraImageMetadataFormatNamesSync(): (string | null)[] | null;
    /**
     * @param var0 original type: 'java.util.Locale'
     * @return original return type: 'java.lang.String'
     */
    getDescription(var0: java_util_Locale | null): Promise<string | null>;
    /**
     * @param var0 original type: 'java.util.Locale'
     * @return original return type: 'java.lang.String'
     */
    getDescriptionSync(var0: java_util_Locale | null): string | null;
    /**
     * @return original return type: 'void'
     */
    notify(): Promise<void>;
    /**
     * @return original return type: 'void'
     */
    notifySync(): void;
    /**
     * @return original return type: 'java.lang.String[]'
     */
    getMIMETypes(): Promise<(string | null)[] | null>;
    /**
     * @return original return type: 'java.lang.String[]'
     */
    getMIMETypesSync(): (string | null)[] | null;
    /**
     * @return original return type: 'java.lang.String[]'
     */
    getFormatNames(): Promise<(string | null)[] | null>;
    /**
     * @return original return type: 'java.lang.String[]'
     */
    getFormatNamesSync(): (string | null)[] | null;
    /**
     * @return original return type: 'int'
     */
    hashCode(): Promise<number>;
    /**
     * @return original return type: 'int'
     */
    hashCodeSync(): number;
    /**
     * @param var0 original type: 'java.lang.Object'
     * @return original return type: 'javax.imageio.ImageReader'
     */
    createReaderInstance(var0: BasicOrJavaType | null): Promise<javax_imageio_ImageReader | null>;
    /**
     * @param var0 original type: 'java.lang.Object'
     * @return original return type: 'javax.imageio.ImageReader'
     */
    createReaderInstanceSync(var0: BasicOrJavaType | null): javax_imageio_ImageReader | null;
    /**
     * @return original return type: 'javax.imageio.ImageReader'
     */
    createReaderInstance(): Promise<javax_imageio_ImageReader | null>;
    /**
     * @return original return type: 'javax.imageio.ImageReader'
     */
    createReaderInstanceSync(): javax_imageio_ImageReader | null;
    /**
     * @param var0 original type: 'javax.imageio.spi.ServiceRegistry'
     * @param var1 original type: 'java.lang.Class'
     * @return original return type: 'void'
     */
    onDeregistration(var0: javax_imageio_spi_ServiceRegistry | null, var1: java_lang_Class | null): Promise<void>;
    /**
     * @param var0 original type: 'javax.imageio.spi.ServiceRegistry'
     * @param var1 original type: 'java.lang.Class'
     * @return original return type: 'void'
     */
    onDeregistrationSync(var0: javax_imageio_spi_ServiceRegistry | null, var1: java_lang_Class | null): void;
    /**
     * @param var0 original type: 'java.lang.Object'
     * @return original return type: 'boolean'
     */
    canDecodeInput(var0: BasicOrJavaType | null): Promise<boolean>;
    /**
     * @param var0 original type: 'java.lang.Object'
     * @return original return type: 'boolean'
     */
    canDecodeInputSync(var0: BasicOrJavaType | null): boolean;
    /**
     * @return original return type: 'java.lang.String'
     */
    getVersion(): Promise<string | null>;
    /**
     * @return original return type: 'java.lang.String'
     */
    getVersionSync(): string | null;
    /**
     * @return original return type: 'java.lang.String[]'
     */
    getExtraStreamMetadataFormatNames(): Promise<(string | null)[] | null>;
    /**
     * @return original return type: 'java.lang.String[]'
     */
    getExtraStreamMetadataFormatNamesSync(): (string | null)[] | null;
    /**
     * @return original return type: 'java.lang.String'
     */
    getNativeStreamMetadataFormatName(): Promise<string | null>;
    /**
     * @return original return type: 'java.lang.String'
     */
    getNativeStreamMetadataFormatNameSync(): string | null;
    /**
     * @param var0 original type: 'javax.imageio.ImageReader'
     * @return original return type: 'boolean'
     */
    isOwnReader(var0: javax_imageio_ImageReader | null): Promise<boolean>;
    /**
     * @param var0 original type: 'javax.imageio.ImageReader'
     * @return original return type: 'boolean'
     */
    isOwnReaderSync(var0: javax_imageio_ImageReader | null): boolean;
    /**
     * @param var0 original type: 'java.lang.Object'
     * @return original return type: 'boolean'
     */
    equals(var0: BasicOrJavaType | null): Promise<boolean>;
    /**
     * @param var0 original type: 'java.lang.Object'
     * @return original return type: 'boolean'
     */
    equalsSync(var0: BasicOrJavaType | null): boolean;
    /**
     * @return original return type: 'java.lang.String'
     */
    getPluginClassName(): Promise<string | null>;
    /**
     * @return original return type: 'java.lang.String'
     */
    getPluginClassNameSync(): string | null;
    /**
     * @param var0 original type: 'javax.imageio.spi.ServiceRegistry'
     * @param var1 original type: 'java.lang.Class'
     * @return original return type: 'void'
     */
    onRegistration(var0: javax_imageio_spi_ServiceRegistry | null, var1: java_lang_Class | null): Promise<void>;
    /**
     * @param var0 original type: 'javax.imageio.spi.ServiceRegistry'
     * @param var1 original type: 'java.lang.Class'
     * @return original return type: 'void'
     */
    onRegistrationSync(var0: javax_imageio_spi_ServiceRegistry | null, var1: java_lang_Class | null): void;
    /**
     * Original type: 'java.lang.Class[]'
     */
    static readonly STANDARD_INPUT_TYPE: (java_lang_Class | null)[] | null;
}
declare const ImageReaderSpi_base: typeof ImageReaderSpiClass;
/**
 * Class javax.imageio.spi.ImageReaderSpi.
 *
 * This actually imports the java class for further use.
 * The class {@link ImageReaderSpiClass} only defines types, this is the class you should actually import.
 * Please note that this statement imports the underlying java class at runtime, which may take a while.
 * This was generated by java-bridge.
 * You should probably not edit this.
 */
export declare class ImageReaderSpi extends ImageReaderSpi_base {
    /**
     * Private constructor to prevent instantiation
     * as this is either an abstract class or an interface
     */
    private constructor();
}
export default ImageReaderSpi;
