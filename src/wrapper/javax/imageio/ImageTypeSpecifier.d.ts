import { JavaClass, BasicOrJavaType, JavaInterfaceProxy } from "java-bridge";
import { Class as java_lang_Class } from "./../../java/lang/Class";
import { BufferedImage as java_awt_image_BufferedImage } from "./../../java/awt/image/BufferedImage";
import { Integer as java_lang_Integer } from "./../../java/lang/Integer";
import { Long as java_lang_Long } from "./../../java/lang/Long";
import { ColorModel as java_awt_image_ColorModel } from "./../../java/awt/image/ColorModel";
import { ColorSpace as java_awt_color_ColorSpace } from "./../../java/awt/color/ColorSpace";
import { Boolean as java_lang_Boolean } from "./../../java/lang/Boolean";
import { SampleModel as java_awt_image_SampleModel } from "./../../java/awt/image/SampleModel";
import { RenderedImage as java_awt_image_RenderedImage, RenderedImageInterface as java_awt_image_RenderedImageInterface } from "./../../java/awt/image/RenderedImage";
/**
 * This class just defines types, you should import {@link ImageTypeSpecifier} instead of this.
 * This was generated by java-bridge.
 * You should probably not edit this.
 */
export declare class ImageTypeSpecifierClass extends JavaClass {
    /**
     * @return original return type: 'java.lang.Class'
     */
    getClass(): Promise<java_lang_Class>;
    /**
     * @return original return type: 'java.lang.Class'
     */
    getClassSync(): java_lang_Class;
    /**
     * @param var0 original type: 'int'
     * @param var1 original type: 'int'
     * @return original return type: 'java.awt.image.BufferedImage'
     */
    createBufferedImage(var0: java_lang_Integer | number, var1: java_lang_Integer | number): Promise<java_awt_image_BufferedImage | null>;
    /**
     * @param var0 original type: 'int'
     * @param var1 original type: 'int'
     * @return original return type: 'java.awt.image.BufferedImage'
     */
    createBufferedImageSync(var0: java_lang_Integer | number, var1: java_lang_Integer | number): java_awt_image_BufferedImage | null;
    /**
     * @param var0 original type: 'long'
     * @param var1 original type: 'int'
     * @return original return type: 'void'
     */
    wait(var0: java_lang_Long | bigint | number, var1: java_lang_Integer | number): Promise<void>;
    /**
     * @param var0 original type: 'long'
     * @param var1 original type: 'int'
     * @return original return type: 'void'
     */
    waitSync(var0: java_lang_Long | bigint | number, var1: java_lang_Integer | number): void;
    /**
     * @return original return type: 'void'
     */
    wait(): Promise<void>;
    /**
     * @return original return type: 'void'
     */
    waitSync(): void;
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'void'
     */
    wait(var0: java_lang_Long | bigint | number): Promise<void>;
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'void'
     */
    waitSync(var0: java_lang_Long | bigint | number): void;
    /**
     * @return original return type: 'int'
     */
    getBufferedImageType(): Promise<number>;
    /**
     * @return original return type: 'int'
     */
    getBufferedImageTypeSync(): number;
    /**
     * @return original return type: 'java.awt.image.ColorModel'
     */
    getColorModel(): Promise<java_awt_image_ColorModel | null>;
    /**
     * @return original return type: 'java.awt.image.ColorModel'
     */
    getColorModelSync(): java_awt_image_ColorModel | null;
    /**
     * @return original return type: 'int'
     */
    getNumComponents(): Promise<number>;
    /**
     * @return original return type: 'int'
     */
    getNumComponentsSync(): number;
    /**
     * @param var0 original type: 'int'
     * @return original return type: 'javax.imageio.ImageTypeSpecifier'
     */
    static createFromBufferedImageType(var0: java_lang_Integer | number): Promise<ImageTypeSpecifier | null>;
    /**
     * @param var0 original type: 'int'
     * @return original return type: 'javax.imageio.ImageTypeSpecifier'
     */
    static createFromBufferedImageTypeSync(var0: java_lang_Integer | number): ImageTypeSpecifier | null;
    /**
     * @return original return type: 'void'
     */
    notifyAll(): Promise<void>;
    /**
     * @return original return type: 'void'
     */
    notifyAllSync(): void;
    /**
     * @param var0 original type: 'java.awt.color.ColorSpace'
     * @param var1 original type: 'int[]'
     * @param var2 original type: 'int[]'
     * @param var3 original type: 'int'
     * @param var4 original type: 'boolean'
     * @param var5 original type: 'boolean'
     * @return original return type: 'javax.imageio.ImageTypeSpecifier'
     */
    static createBanded(var0: java_awt_color_ColorSpace | null, var1: (java_lang_Integer | number)[] | null, var2: (java_lang_Integer | number)[] | null, var3: java_lang_Integer | number, var4: java_lang_Boolean | boolean, var5: java_lang_Boolean | boolean): Promise<ImageTypeSpecifier | null>;
    /**
     * @param var0 original type: 'java.awt.color.ColorSpace'
     * @param var1 original type: 'int[]'
     * @param var2 original type: 'int[]'
     * @param var3 original type: 'int'
     * @param var4 original type: 'boolean'
     * @param var5 original type: 'boolean'
     * @return original return type: 'javax.imageio.ImageTypeSpecifier'
     */
    static createBandedSync(var0: java_awt_color_ColorSpace | null, var1: (java_lang_Integer | number)[] | null, var2: (java_lang_Integer | number)[] | null, var3: java_lang_Integer | number, var4: java_lang_Boolean | boolean, var5: java_lang_Boolean | boolean): ImageTypeSpecifier | null;
    /**
     * @return original return type: 'int'
     */
    getNumBands(): Promise<number>;
    /**
     * @return original return type: 'int'
     */
    getNumBandsSync(): number;
    /**
     * @param var0 original type: 'int'
     * @return original return type: 'int'
     */
    getBitsPerBand(var0: java_lang_Integer | number): Promise<number>;
    /**
     * @param var0 original type: 'int'
     * @return original return type: 'int'
     */
    getBitsPerBandSync(var0: java_lang_Integer | number): number;
    /**
     * @param var0 original type: 'java.awt.color.ColorSpace'
     * @param var1 original type: 'int'
     * @param var2 original type: 'int'
     * @param var3 original type: 'int'
     * @param var4 original type: 'int'
     * @param var5 original type: 'int'
     * @param var6 original type: 'boolean'
     * @return original return type: 'javax.imageio.ImageTypeSpecifier'
     */
    static createPacked(var0: java_awt_color_ColorSpace | null, var1: java_lang_Integer | number, var2: java_lang_Integer | number, var3: java_lang_Integer | number, var4: java_lang_Integer | number, var5: java_lang_Integer | number, var6: java_lang_Boolean | boolean): Promise<ImageTypeSpecifier | null>;
    /**
     * @param var0 original type: 'java.awt.color.ColorSpace'
     * @param var1 original type: 'int'
     * @param var2 original type: 'int'
     * @param var3 original type: 'int'
     * @param var4 original type: 'int'
     * @param var5 original type: 'int'
     * @param var6 original type: 'boolean'
     * @return original return type: 'javax.imageio.ImageTypeSpecifier'
     */
    static createPackedSync(var0: java_awt_color_ColorSpace | null, var1: java_lang_Integer | number, var2: java_lang_Integer | number, var3: java_lang_Integer | number, var4: java_lang_Integer | number, var5: java_lang_Integer | number, var6: java_lang_Boolean | boolean): ImageTypeSpecifier | null;
    /**
     * @param var0 original type: 'byte[]'
     * @param var1 original type: 'byte[]'
     * @param var2 original type: 'byte[]'
     * @param var3 original type: 'byte[]'
     * @param var4 original type: 'int'
     * @param var5 original type: 'int'
     * @return original return type: 'javax.imageio.ImageTypeSpecifier'
     */
    static createIndexed(var0: Buffer | null, var1: Buffer | null, var2: Buffer | null, var3: Buffer | null, var4: java_lang_Integer | number, var5: java_lang_Integer | number): Promise<ImageTypeSpecifier | null>;
    /**
     * @param var0 original type: 'byte[]'
     * @param var1 original type: 'byte[]'
     * @param var2 original type: 'byte[]'
     * @param var3 original type: 'byte[]'
     * @param var4 original type: 'int'
     * @param var5 original type: 'int'
     * @return original return type: 'javax.imageio.ImageTypeSpecifier'
     */
    static createIndexedSync(var0: Buffer | null, var1: Buffer | null, var2: Buffer | null, var3: Buffer | null, var4: java_lang_Integer | number, var5: java_lang_Integer | number): ImageTypeSpecifier | null;
    /**
     * @return original return type: 'void'
     */
    notify(): Promise<void>;
    /**
     * @return original return type: 'void'
     */
    notifySync(): void;
    /**
     * @param var0 original type: 'java.awt.color.ColorSpace'
     * @param var1 original type: 'int[]'
     * @param var2 original type: 'int'
     * @param var3 original type: 'boolean'
     * @param var4 original type: 'boolean'
     * @return original return type: 'javax.imageio.ImageTypeSpecifier'
     */
    static createInterleaved(var0: java_awt_color_ColorSpace | null, var1: (java_lang_Integer | number)[] | null, var2: java_lang_Integer | number, var3: java_lang_Boolean | boolean, var4: java_lang_Boolean | boolean): Promise<ImageTypeSpecifier | null>;
    /**
     * @param var0 original type: 'java.awt.color.ColorSpace'
     * @param var1 original type: 'int[]'
     * @param var2 original type: 'int'
     * @param var3 original type: 'boolean'
     * @param var4 original type: 'boolean'
     * @return original return type: 'javax.imageio.ImageTypeSpecifier'
     */
    static createInterleavedSync(var0: java_awt_color_ColorSpace | null, var1: (java_lang_Integer | number)[] | null, var2: java_lang_Integer | number, var3: java_lang_Boolean | boolean, var4: java_lang_Boolean | boolean): ImageTypeSpecifier | null;
    /**
     * @param var0 original type: 'int'
     * @param var1 original type: 'int'
     * @return original return type: 'java.awt.image.SampleModel'
     */
    getSampleModel(var0: java_lang_Integer | number, var1: java_lang_Integer | number): Promise<java_awt_image_SampleModel | null>;
    /**
     * @param var0 original type: 'int'
     * @param var1 original type: 'int'
     * @return original return type: 'java.awt.image.SampleModel'
     */
    getSampleModelSync(var0: java_lang_Integer | number, var1: java_lang_Integer | number): java_awt_image_SampleModel | null;
    /**
     * @return original return type: 'java.awt.image.SampleModel'
     */
    getSampleModel(): Promise<java_awt_image_SampleModel | null>;
    /**
     * @return original return type: 'java.awt.image.SampleModel'
     */
    getSampleModelSync(): java_awt_image_SampleModel | null;
    /**
     * @return original return type: 'int'
     */
    hashCode(): Promise<number>;
    /**
     * @return original return type: 'int'
     */
    hashCodeSync(): number;
    /**
     * @param var0 original type: 'java.lang.Object'
     * @return original return type: 'boolean'
     */
    equals(var0: BasicOrJavaType | null): Promise<boolean>;
    /**
     * @param var0 original type: 'java.lang.Object'
     * @return original return type: 'boolean'
     */
    equalsSync(var0: BasicOrJavaType | null): boolean;
    /**
     * @param var0 original type: 'java.awt.image.RenderedImage'
     * @return original return type: 'javax.imageio.ImageTypeSpecifier'
     */
    static createFromRenderedImage(var0: java_awt_image_RenderedImage | JavaInterfaceProxy<java_awt_image_RenderedImageInterface> | null): Promise<ImageTypeSpecifier | null>;
    /**
     * @param var0 original type: 'java.awt.image.RenderedImage'
     * @return original return type: 'javax.imageio.ImageTypeSpecifier'
     */
    static createFromRenderedImageSync(var0: java_awt_image_RenderedImage | JavaInterfaceProxy<java_awt_image_RenderedImageInterface> | null): ImageTypeSpecifier | null;
    /**
     * @param var0 original type: 'int'
     * @param var1 original type: 'int'
     * @param var2 original type: 'boolean'
     * @param var3 original type: 'boolean'
     * @return original return type: 'javax.imageio.ImageTypeSpecifier'
     */
    static createGrayscale(var0: java_lang_Integer | number, var1: java_lang_Integer | number, var2: java_lang_Boolean | boolean, var3: java_lang_Boolean | boolean): Promise<ImageTypeSpecifier | null>;
    /**
     * @param var0 original type: 'int'
     * @param var1 original type: 'int'
     * @param var2 original type: 'boolean'
     * @param var3 original type: 'boolean'
     * @return original return type: 'javax.imageio.ImageTypeSpecifier'
     */
    static createGrayscaleSync(var0: java_lang_Integer | number, var1: java_lang_Integer | number, var2: java_lang_Boolean | boolean, var3: java_lang_Boolean | boolean): ImageTypeSpecifier | null;
    /**
     * @param var0 original type: 'int'
     * @param var1 original type: 'int'
     * @param var2 original type: 'boolean'
     * @return original return type: 'javax.imageio.ImageTypeSpecifier'
     */
    static createGrayscale(var0: java_lang_Integer | number, var1: java_lang_Integer | number, var2: java_lang_Boolean | boolean): Promise<ImageTypeSpecifier | null>;
    /**
     * @param var0 original type: 'int'
     * @param var1 original type: 'int'
     * @param var2 original type: 'boolean'
     * @return original return type: 'javax.imageio.ImageTypeSpecifier'
     */
    static createGrayscaleSync(var0: java_lang_Integer | number, var1: java_lang_Integer | number, var2: java_lang_Boolean | boolean): ImageTypeSpecifier | null;
    /**
     * @param var0 original type: 'java.awt.image.ColorModel'
     * @param var1 original type: 'java.awt.image.SampleModel'
     */
    constructor(var0: java_awt_image_ColorModel | null, var1: java_awt_image_SampleModel | null);
    /**
     * @param var0 original type: 'java.awt.image.ColorModel'
     * @param var1 original type: 'java.awt.image.SampleModel'
     * @return original return type: 'javax.imageio.ImageTypeSpecifier'
     */
    static newInstanceAsync(var0: java_awt_image_ColorModel | null, var1: java_awt_image_SampleModel | null): Promise<ImageTypeSpecifier>;
    /**
     * @param var0 original type: 'java.awt.image.RenderedImage'
     */
    constructor(var0: java_awt_image_RenderedImage | JavaInterfaceProxy<java_awt_image_RenderedImageInterface> | null);
    /**
     * @param var0 original type: 'java.awt.image.RenderedImage'
     * @return original return type: 'javax.imageio.ImageTypeSpecifier'
     */
    static newInstanceAsync(var0: java_awt_image_RenderedImage | JavaInterfaceProxy<java_awt_image_RenderedImageInterface> | null): Promise<ImageTypeSpecifier>;
}
declare const ImageTypeSpecifier_base: typeof ImageTypeSpecifierClass;
/**
 * Class javax.imageio.ImageTypeSpecifier.
 *
 * This actually imports the java class for further use.
 * The class {@link ImageTypeSpecifierClass} only defines types, this is the class you should actually import.
 * Please note that this statement imports the underlying java class at runtime, which may take a while.
 * This was generated by java-bridge.
 * You should probably not edit this.
 */
export declare class ImageTypeSpecifier extends ImageTypeSpecifier_base {
}
export default ImageTypeSpecifier;
