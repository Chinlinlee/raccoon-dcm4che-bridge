import { JavaClass, BasicOrJavaType, InterfaceProxyOptions, JavaInterfaceProxy } from "java-bridge";
import { Comparable as java_lang_Comparable } from "./../../../java/lang/Comparable";
import { ImageTypeSpecifier as javax_imageio_ImageTypeSpecifier } from "./../ImageTypeSpecifier";
import { Locale as java_util_Locale } from "./../../../java/util/Locale";
import { Class as java_lang_Class } from "./../../../java/lang/Class";
import { Integer as java_lang_Integer } from "./../../../java/lang/Integer";
/**
 * This class just defines types, you should import {@link IIOMetadataFormat} instead of this.
 * This was generated by java-bridge.
 * You should probably not edit this.
 */
export declare class IIOMetadataFormatClass extends JavaClass {
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'java.lang.Comparable'
     */
    getObjectMaxValue(var0: string | null): Promise<java_lang_Comparable | null>;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'java.lang.Comparable'
     */
    getObjectMaxValueSync(var0: string | null): java_lang_Comparable | null;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'java.lang.Object'
     */
    getObjectDefaultValue(var0: string | null): Promise<BasicOrJavaType | null>;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'java.lang.Object'
     */
    getObjectDefaultValueSync(var0: string | null): BasicOrJavaType | null;
    /**
     * @param var0 original type: 'java.lang.String'
     * @param var1 original type: 'javax.imageio.ImageTypeSpecifier'
     * @return original return type: 'boolean'
     */
    canNodeAppear(var0: string | null, var1: javax_imageio_ImageTypeSpecifier | null): Promise<boolean>;
    /**
     * @param var0 original type: 'java.lang.String'
     * @param var1 original type: 'javax.imageio.ImageTypeSpecifier'
     * @return original return type: 'boolean'
     */
    canNodeAppearSync(var0: string | null, var1: javax_imageio_ImageTypeSpecifier | null): boolean;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'java.lang.String[]'
     */
    getChildNames(var0: string | null): Promise<(string | null)[] | null>;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'java.lang.String[]'
     */
    getChildNamesSync(var0: string | null): (string | null)[] | null;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'int'
     */
    getElementMaxChildren(var0: string | null): Promise<number>;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'int'
     */
    getElementMaxChildrenSync(var0: string | null): number;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'int'
     */
    getChildPolicy(var0: string | null): Promise<number>;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'int'
     */
    getChildPolicySync(var0: string | null): number;
    /**
     * @param var0 original type: 'java.lang.String'
     * @param var1 original type: 'java.lang.String'
     * @return original return type: 'int'
     */
    getAttributeListMaxLength(var0: string | null, var1: string | null): Promise<number>;
    /**
     * @param var0 original type: 'java.lang.String'
     * @param var1 original type: 'java.lang.String'
     * @return original return type: 'int'
     */
    getAttributeListMaxLengthSync(var0: string | null, var1: string | null): number;
    /**
     * @param var0 original type: 'java.lang.String'
     * @param var1 original type: 'java.lang.String'
     * @return original return type: 'boolean'
     */
    isAttributeRequired(var0: string | null, var1: string | null): Promise<boolean>;
    /**
     * @param var0 original type: 'java.lang.String'
     * @param var1 original type: 'java.lang.String'
     * @return original return type: 'boolean'
     */
    isAttributeRequiredSync(var0: string | null, var1: string | null): boolean;
    /**
     * @param var0 original type: 'java.lang.String'
     * @param var1 original type: 'java.lang.String'
     * @return original return type: 'int'
     */
    getAttributeListMinLength(var0: string | null, var1: string | null): Promise<number>;
    /**
     * @param var0 original type: 'java.lang.String'
     * @param var1 original type: 'java.lang.String'
     * @return original return type: 'int'
     */
    getAttributeListMinLengthSync(var0: string | null, var1: string | null): number;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'int'
     */
    getObjectValueType(var0: string | null): Promise<number>;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'int'
     */
    getObjectValueTypeSync(var0: string | null): number;
    /**
     * @param var0 original type: 'java.lang.String'
     * @param var1 original type: 'java.lang.String'
     * @param var2 original type: 'java.util.Locale'
     * @return original return type: 'java.lang.String'
     */
    getAttributeDescription(var0: string | null, var1: string | null, var2: java_util_Locale | null): Promise<string | null>;
    /**
     * @param var0 original type: 'java.lang.String'
     * @param var1 original type: 'java.lang.String'
     * @param var2 original type: 'java.util.Locale'
     * @return original return type: 'java.lang.String'
     */
    getAttributeDescriptionSync(var0: string | null, var1: string | null, var2: java_util_Locale | null): string | null;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'java.lang.Class'
     */
    getObjectClass(var0: string | null): Promise<java_lang_Class | null>;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'java.lang.Class'
     */
    getObjectClassSync(var0: string | null): java_lang_Class | null;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'int'
     */
    getElementMinChildren(var0: string | null): Promise<number>;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'int'
     */
    getElementMinChildrenSync(var0: string | null): number;
    /**
     * @return original return type: 'java.lang.String'
     */
    getRootName(): Promise<string | null>;
    /**
     * @return original return type: 'java.lang.String'
     */
    getRootNameSync(): string | null;
    /**
     * @param var0 original type: 'java.lang.String'
     * @param var1 original type: 'java.lang.String'
     * @return original return type: 'int'
     */
    getAttributeValueType(var0: string | null, var1: string | null): Promise<number>;
    /**
     * @param var0 original type: 'java.lang.String'
     * @param var1 original type: 'java.lang.String'
     * @return original return type: 'int'
     */
    getAttributeValueTypeSync(var0: string | null, var1: string | null): number;
    /**
     * @param var0 original type: 'java.lang.String'
     * @param var1 original type: 'java.lang.String'
     * @return original return type: 'java.lang.String'
     */
    getAttributeDefaultValue(var0: string | null, var1: string | null): Promise<string | null>;
    /**
     * @param var0 original type: 'java.lang.String'
     * @param var1 original type: 'java.lang.String'
     * @return original return type: 'java.lang.String'
     */
    getAttributeDefaultValueSync(var0: string | null, var1: string | null): string | null;
    /**
     * @param var0 original type: 'java.lang.String'
     * @param var1 original type: 'java.lang.String'
     * @return original return type: 'java.lang.String'
     */
    getAttributeMinValue(var0: string | null, var1: string | null): Promise<string | null>;
    /**
     * @param var0 original type: 'java.lang.String'
     * @param var1 original type: 'java.lang.String'
     * @return original return type: 'java.lang.String'
     */
    getAttributeMinValueSync(var0: string | null, var1: string | null): string | null;
    /**
     * @param var0 original type: 'java.lang.String'
     * @param var1 original type: 'java.lang.String'
     * @return original return type: 'int'
     */
    getAttributeDataType(var0: string | null, var1: string | null): Promise<number>;
    /**
     * @param var0 original type: 'java.lang.String'
     * @param var1 original type: 'java.lang.String'
     * @return original return type: 'int'
     */
    getAttributeDataTypeSync(var0: string | null, var1: string | null): number;
    /**
     * @param var0 original type: 'java.lang.String'
     * @param var1 original type: 'java.util.Locale'
     * @return original return type: 'java.lang.String'
     */
    getElementDescription(var0: string | null, var1: java_util_Locale | null): Promise<string | null>;
    /**
     * @param var0 original type: 'java.lang.String'
     * @param var1 original type: 'java.util.Locale'
     * @return original return type: 'java.lang.String'
     */
    getElementDescriptionSync(var0: string | null, var1: java_util_Locale | null): string | null;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'java.lang.Comparable'
     */
    getObjectMinValue(var0: string | null): Promise<java_lang_Comparable | null>;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'java.lang.Comparable'
     */
    getObjectMinValueSync(var0: string | null): java_lang_Comparable | null;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'java.lang.Object[]'
     */
    getObjectEnumerations(var0: string | null): Promise<(BasicOrJavaType | null)[] | null>;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'java.lang.Object[]'
     */
    getObjectEnumerationsSync(var0: string | null): (BasicOrJavaType | null)[] | null;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'int'
     */
    getObjectArrayMinLength(var0: string | null): Promise<number>;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'int'
     */
    getObjectArrayMinLengthSync(var0: string | null): number;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'java.lang.String[]'
     */
    getAttributeNames(var0: string | null): Promise<(string | null)[] | null>;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'java.lang.String[]'
     */
    getAttributeNamesSync(var0: string | null): (string | null)[] | null;
    /**
     * @param var0 original type: 'java.lang.String'
     * @param var1 original type: 'java.lang.String'
     * @return original return type: 'java.lang.String'
     */
    getAttributeMaxValue(var0: string | null, var1: string | null): Promise<string | null>;
    /**
     * @param var0 original type: 'java.lang.String'
     * @param var1 original type: 'java.lang.String'
     * @return original return type: 'java.lang.String'
     */
    getAttributeMaxValueSync(var0: string | null, var1: string | null): string | null;
    /**
     * @param var0 original type: 'java.lang.String'
     * @param var1 original type: 'java.lang.String'
     * @return original return type: 'java.lang.String[]'
     */
    getAttributeEnumerations(var0: string | null, var1: string | null): Promise<(string | null)[] | null>;
    /**
     * @param var0 original type: 'java.lang.String'
     * @param var1 original type: 'java.lang.String'
     * @return original return type: 'java.lang.String[]'
     */
    getAttributeEnumerationsSync(var0: string | null, var1: string | null): (string | null)[] | null;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'int'
     */
    getObjectArrayMaxLength(var0: string | null): Promise<number>;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'int'
     */
    getObjectArrayMaxLengthSync(var0: string | null): number;
    /**
     * Original type: 'int'
     */
    static readonly DATATYPE_INTEGER: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly CHILD_POLICY_EMPTY: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly VALUE_ARBITRARY: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly VALUE_RANGE_MIN_INCLUSIVE_MASK: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly DATATYPE_BOOLEAN: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly CHILD_POLICY_SEQUENCE: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly CHILD_POLICY_REPEAT: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly VALUE_NONE: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly CHILD_POLICY_CHOICE: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly CHILD_POLICY_MAX: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly VALUE_RANGE: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly VALUE_RANGE_MAX_INCLUSIVE: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly VALUE_RANGE_MIN_MAX_INCLUSIVE: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly VALUE_ENUMERATION: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly DATATYPE_FLOAT: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly CHILD_POLICY_SOME: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly VALUE_RANGE_MAX_INCLUSIVE_MASK: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly CHILD_POLICY_ALL: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly VALUE_RANGE_MIN_INCLUSIVE: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly DATATYPE_STRING: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly DATATYPE_DOUBLE: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly VALUE_LIST: java_lang_Integer | number;
}
/**
 * This interface just defines types for creating proxies,
 * you should use {@link createIIOMetadataFormatProxy} for actually creating the proxies.
 *
 * Optional methods in here may still be required by java.
 * This is caused by typescript not allowing to have both optional and
 * non-optional signatures for the same interface member.
 *
 * This was generated by java-bridge.
 * You should probably not edit this.
 */
export interface IIOMetadataFormatInterface {
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'java.lang.Comparable'
     */
    getObjectMaxValue(var0: string | null): java_lang_Comparable | null;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'java.lang.Object'
     */
    getObjectDefaultValue(var0: string | null): BasicOrJavaType | null;
    /**
     * @param var0 original type: 'java.lang.String'
     * @param var1 original type: 'javax.imageio.ImageTypeSpecifier'
     * @return original return type: 'boolean'
     */
    canNodeAppear(var0: string | null, var1: javax_imageio_ImageTypeSpecifier | null): boolean;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'java.lang.String[]'
     */
    getChildNames(var0: string | null): (string | null)[] | null;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'int'
     */
    getElementMaxChildren(var0: string | null): number;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'int'
     */
    getChildPolicy(var0: string | null): number;
    /**
     * @param var0 original type: 'java.lang.String'
     * @param var1 original type: 'java.lang.String'
     * @return original return type: 'int'
     */
    getAttributeListMaxLength(var0: string | null, var1: string | null): number;
    /**
     * @param var0 original type: 'java.lang.String'
     * @param var1 original type: 'java.lang.String'
     * @return original return type: 'boolean'
     */
    isAttributeRequired(var0: string | null, var1: string | null): boolean;
    /**
     * @param var0 original type: 'java.lang.String'
     * @param var1 original type: 'java.lang.String'
     * @return original return type: 'int'
     */
    getAttributeListMinLength(var0: string | null, var1: string | null): number;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'int'
     */
    getObjectValueType(var0: string | null): number;
    /**
     * @param var0 original type: 'java.lang.String'
     * @param var1 original type: 'java.lang.String'
     * @param var2 original type: 'java.util.Locale'
     * @return original return type: 'java.lang.String'
     */
    getAttributeDescription(var0: string | null, var1: string | null, var2: java_util_Locale | null): string | null;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'java.lang.Class'
     */
    getObjectClass(var0: string | null): java_lang_Class | null;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'int'
     */
    getElementMinChildren(var0: string | null): number;
    /**
     * @return original return type: 'java.lang.String'
     */
    getRootName(): string | null;
    /**
     * @param var0 original type: 'java.lang.String'
     * @param var1 original type: 'java.lang.String'
     * @return original return type: 'int'
     */
    getAttributeValueType(var0: string | null, var1: string | null): number;
    /**
     * @param var0 original type: 'java.lang.String'
     * @param var1 original type: 'java.lang.String'
     * @return original return type: 'java.lang.String'
     */
    getAttributeDefaultValue(var0: string | null, var1: string | null): string | null;
    /**
     * @param var0 original type: 'java.lang.String'
     * @param var1 original type: 'java.lang.String'
     * @return original return type: 'java.lang.String'
     */
    getAttributeMinValue(var0: string | null, var1: string | null): string | null;
    /**
     * @param var0 original type: 'java.lang.String'
     * @param var1 original type: 'java.lang.String'
     * @return original return type: 'int'
     */
    getAttributeDataType(var0: string | null, var1: string | null): number;
    /**
     * @param var0 original type: 'java.lang.String'
     * @param var1 original type: 'java.util.Locale'
     * @return original return type: 'java.lang.String'
     */
    getElementDescription(var0: string | null, var1: java_util_Locale | null): string | null;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'java.lang.Comparable'
     */
    getObjectMinValue(var0: string | null): java_lang_Comparable | null;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'java.lang.Object[]'
     */
    getObjectEnumerations(var0: string | null): (BasicOrJavaType | null)[] | null;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'int'
     */
    getObjectArrayMinLength(var0: string | null): number;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'java.lang.String[]'
     */
    getAttributeNames(var0: string | null): (string | null)[] | null;
    /**
     * @param var0 original type: 'java.lang.String'
     * @param var1 original type: 'java.lang.String'
     * @return original return type: 'java.lang.String'
     */
    getAttributeMaxValue(var0: string | null, var1: string | null): string | null;
    /**
     * @param var0 original type: 'java.lang.String'
     * @param var1 original type: 'java.lang.String'
     * @return original return type: 'java.lang.String[]'
     */
    getAttributeEnumerations(var0: string | null, var1: string | null): (string | null)[] | null;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'int'
     */
    getObjectArrayMaxLength(var0: string | null): number;
}
/**
 * Create a proxy for the {@link IIOMetadataFormat} interface.
 * All required methods in {@link IIOMetadataFormatInterface} must be implemented.
 *
 * @param methods the methods to implement
 * @param opts the proxy options
 * @return the proxy
 */
export declare function createIIOMetadataFormatProxy(methods: IIOMetadataFormatInterface, opts?: InterfaceProxyOptions): JavaInterfaceProxy<IIOMetadataFormatInterface>;
declare const IIOMetadataFormat_base: typeof IIOMetadataFormatClass;
/**
 * Class javax.imageio.metadata.IIOMetadataFormat.
 *
 * This actually imports the java class for further use.
 * The class {@link IIOMetadataFormatClass} only defines types, this is the class you should actually import.
 * Please note that this statement imports the underlying java class at runtime, which may take a while.
 * This was generated by java-bridge.
 * You should probably not edit this.
 */
export declare class IIOMetadataFormat extends IIOMetadataFormat_base {
    /**
     * Private constructor to prevent instantiation
     * as this is either an abstract class or an interface
     */
    private constructor();
}
export default IIOMetadataFormat;
//# sourceMappingURL=IIOMetadataFormat.d.ts.map