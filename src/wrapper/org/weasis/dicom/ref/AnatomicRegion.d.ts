import { JavaClass, BasicOrJavaType, JavaInterfaceProxy } from "java-bridge";
import { Class as java_lang_Class } from "./../../../../java/lang/Class";
import { Long as java_lang_Long } from "./../../../../java/lang/Long";
import { Integer as java_lang_Integer } from "./../../../../java/lang/Integer";
import { Attributes as org_dcm4che3_data_Attributes } from "./../../../dcm4che3/data/Attributes";
import { AnatomicModifier as org_weasis_dicom_ref_AnatomicModifier } from "./AnatomicModifier";
import { AnatomicBuilder$CategoryBuilder as org_weasis_dicom_ref_AnatomicBuilder$CategoryBuilder, AnatomicBuilder$CategoryBuilderInterface as org_weasis_dicom_ref_AnatomicBuilder$CategoryBuilderInterface } from "./AnatomicBuilder$CategoryBuilder";
import { AnatomicItem as org_weasis_dicom_ref_AnatomicItem, AnatomicItemInterface as org_weasis_dicom_ref_AnatomicItemInterface } from "./AnatomicItem";
import { Set as java_util_Set, SetInterface as java_util_SetInterface } from "./../../../../java/util/Set";
/**
 * This class just defines types, you should import {@link AnatomicRegion} instead of this.
 * This was generated by java-bridge.
 * You should probably not edit this.
 */
export declare class AnatomicRegionClass extends JavaClass {
    /**
     * @return original return type: 'java.lang.Class'
     */
    getClass(): Promise<java_lang_Class>;
    /**
     * @return original return type: 'java.lang.Class'
     */
    getClassSync(): java_lang_Class;
    /**
     * @param var0 original type: 'long'
     * @param var1 original type: 'int'
     * @return original return type: 'void'
     */
    wait(var0: java_lang_Long | bigint | number, var1: java_lang_Integer | number): Promise<void>;
    /**
     * @param var0 original type: 'long'
     * @param var1 original type: 'int'
     * @return original return type: 'void'
     */
    waitSync(var0: java_lang_Long | bigint | number, var1: java_lang_Integer | number): void;
    /**
     * @return original return type: 'void'
     */
    wait(): Promise<void>;
    /**
     * @return original return type: 'void'
     */
    waitSync(): void;
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'void'
     */
    wait(var0: java_lang_Long | bigint | number): Promise<void>;
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'void'
     */
    waitSync(var0: java_lang_Long | bigint | number): void;
    /**
     * @param var0 original type: 'org.dcm4che3.data.Attributes'
     * @return original return type: 'org.weasis.dicom.ref.AnatomicRegion'
     */
    static read(var0: org_dcm4che3_data_Attributes | null): Promise<AnatomicRegion | null>;
    /**
     * @param var0 original type: 'org.dcm4che3.data.Attributes'
     * @return original return type: 'org.weasis.dicom.ref.AnatomicRegion'
     */
    static readSync(var0: org_dcm4che3_data_Attributes | null): AnatomicRegion | null;
    /**
     * @param var0 original type: 'org.weasis.dicom.ref.AnatomicModifier'
     * @return original return type: 'void'
     */
    addModifier(var0: org_weasis_dicom_ref_AnatomicModifier | null): Promise<void>;
    /**
     * @param var0 original type: 'org.weasis.dicom.ref.AnatomicModifier'
     * @return original return type: 'void'
     */
    addModifierSync(var0: org_weasis_dicom_ref_AnatomicModifier | null): void;
    /**
     * @return original return type: 'void'
     */
    notifyAll(): Promise<void>;
    /**
     * @return original return type: 'void'
     */
    notifyAllSync(): void;
    /**
     * @return original return type: 'org.weasis.dicom.ref.AnatomicBuilder$CategoryBuilder'
     */
    getCategory(): Promise<org_weasis_dicom_ref_AnatomicBuilder$CategoryBuilder | null>;
    /**
     * @return original return type: 'org.weasis.dicom.ref.AnatomicBuilder$CategoryBuilder'
     */
    getCategorySync(): org_weasis_dicom_ref_AnatomicBuilder$CategoryBuilder | null;
    /**
     * @return original return type: 'void'
     */
    notify(): Promise<void>;
    /**
     * @return original return type: 'void'
     */
    notifySync(): void;
    /**
     * @return original return type: 'org.weasis.dicom.ref.AnatomicItem'
     */
    getRegion(): Promise<org_weasis_dicom_ref_AnatomicItem | null>;
    /**
     * @return original return type: 'org.weasis.dicom.ref.AnatomicItem'
     */
    getRegionSync(): org_weasis_dicom_ref_AnatomicItem | null;
    /**
     * @return original return type: 'int'
     */
    hashCode(): Promise<number>;
    /**
     * @return original return type: 'int'
     */
    hashCodeSync(): number;
    /**
     * @param var0 original type: 'java.lang.Object'
     * @return original return type: 'boolean'
     */
    equals(var0: BasicOrJavaType | null): Promise<boolean>;
    /**
     * @param var0 original type: 'java.lang.Object'
     * @return original return type: 'boolean'
     */
    equalsSync(var0: BasicOrJavaType | null): boolean;
    /**
     * @return original return type: 'java.util.Set'
     */
    getModifiers(): Promise<java_util_Set | null>;
    /**
     * @return original return type: 'java.util.Set'
     */
    getModifiersSync(): java_util_Set | null;
    /**
     * @param var0 original type: 'org.dcm4che3.data.Attributes'
     * @param var1 original type: 'org.weasis.dicom.ref.AnatomicRegion'
     * @return original return type: 'void'
     */
    static write(var0: org_dcm4che3_data_Attributes | null, var1: AnatomicRegionClass | null): Promise<void>;
    /**
     * @param var0 original type: 'org.dcm4che3.data.Attributes'
     * @param var1 original type: 'org.weasis.dicom.ref.AnatomicRegion'
     * @return original return type: 'void'
     */
    static writeSync(var0: org_dcm4che3_data_Attributes | null, var1: AnatomicRegionClass | null): void;
    /**
     * @param var0 original type: 'org.weasis.dicom.ref.AnatomicModifier'
     * @return original return type: 'void'
     */
    removeModifier(var0: org_weasis_dicom_ref_AnatomicModifier | null): Promise<void>;
    /**
     * @param var0 original type: 'org.weasis.dicom.ref.AnatomicModifier'
     * @return original return type: 'void'
     */
    removeModifierSync(var0: org_weasis_dicom_ref_AnatomicModifier | null): void;
    /**
     * @param var0 original type: 'org.weasis.dicom.ref.AnatomicItem'
     */
    constructor(var0: org_weasis_dicom_ref_AnatomicItem | JavaInterfaceProxy<org_weasis_dicom_ref_AnatomicItemInterface> | null);
    /**
     * @param var0 original type: 'org.weasis.dicom.ref.AnatomicItem'
     * @return original return type: 'org.weasis.dicom.ref.AnatomicRegion'
     */
    static newInstanceAsync(var0: org_weasis_dicom_ref_AnatomicItem | JavaInterfaceProxy<org_weasis_dicom_ref_AnatomicItemInterface> | null): Promise<AnatomicRegion>;
    /**
     * @param var0 original type: 'org.weasis.dicom.ref.AnatomicBuilder$CategoryBuilder'
     * @param var1 original type: 'org.weasis.dicom.ref.AnatomicItem'
     * @param var2 original type: 'java.util.Set'
     */
    constructor(var0: org_weasis_dicom_ref_AnatomicBuilder$CategoryBuilder | JavaInterfaceProxy<org_weasis_dicom_ref_AnatomicBuilder$CategoryBuilderInterface> | null, var1: org_weasis_dicom_ref_AnatomicItem | JavaInterfaceProxy<org_weasis_dicom_ref_AnatomicItemInterface> | null, var2: java_util_Set | JavaInterfaceProxy<java_util_SetInterface> | null);
    /**
     * @param var0 original type: 'org.weasis.dicom.ref.AnatomicBuilder$CategoryBuilder'
     * @param var1 original type: 'org.weasis.dicom.ref.AnatomicItem'
     * @param var2 original type: 'java.util.Set'
     * @return original return type: 'org.weasis.dicom.ref.AnatomicRegion'
     */
    static newInstanceAsync(var0: org_weasis_dicom_ref_AnatomicBuilder$CategoryBuilder | JavaInterfaceProxy<org_weasis_dicom_ref_AnatomicBuilder$CategoryBuilderInterface> | null, var1: org_weasis_dicom_ref_AnatomicItem | JavaInterfaceProxy<org_weasis_dicom_ref_AnatomicItemInterface> | null, var2: java_util_Set | JavaInterfaceProxy<java_util_SetInterface> | null): Promise<AnatomicRegion>;
}
declare const AnatomicRegion_base: typeof AnatomicRegionClass;
/**
 * Class org.weasis.dicom.ref.AnatomicRegion.
 *
 * This actually imports the java class for further use.
 * The class {@link AnatomicRegionClass} only defines types, this is the class you should actually import.
 * Please note that this statement imports the underlying java class at runtime, which may take a while.
 * This was generated by java-bridge.
 * You should probably not edit this.
 */
export declare class AnatomicRegion extends AnatomicRegion_base {
}
export default AnatomicRegion;
