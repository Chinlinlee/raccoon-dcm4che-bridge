import { JavaClass, InterfaceProxyOptions, JavaInterfaceProxy } from "java-bridge";
import { PresentationStateLut as org_weasis_opencv_op_lut_PresentationStateLut } from "./PresentationStateLut";
import { LutShape as org_weasis_opencv_op_lut_LutShape } from "./LutShape";
/**
 * This class just defines types, you should import {@link WlParams} instead of this.
 * This was generated by java-bridge.
 * You should probably not edit this.
 */
export declare class WlParamsClass extends JavaClass {
    /**
     * @return original return type: 'double'
     */
    getLevel(): Promise<number>;
    /**
     * @return original return type: 'double'
     */
    getLevelSync(): number;
    /**
     * @return original return type: 'double'
     */
    getWindow(): Promise<number>;
    /**
     * @return original return type: 'double'
     */
    getWindowSync(): number;
    /**
     * @return original return type: 'org.weasis.opencv.op.lut.PresentationStateLut'
     */
    getPresentationState(): Promise<org_weasis_opencv_op_lut_PresentationStateLut | null>;
    /**
     * @return original return type: 'org.weasis.opencv.op.lut.PresentationStateLut'
     */
    getPresentationStateSync(): org_weasis_opencv_op_lut_PresentationStateLut | null;
    /**
     * @return original return type: 'boolean'
     */
    isFillOutsideLutRange(): Promise<boolean>;
    /**
     * @return original return type: 'boolean'
     */
    isFillOutsideLutRangeSync(): boolean;
    /**
     * @return original return type: 'org.weasis.opencv.op.lut.LutShape'
     */
    getLutShape(): Promise<org_weasis_opencv_op_lut_LutShape | null>;
    /**
     * @return original return type: 'org.weasis.opencv.op.lut.LutShape'
     */
    getLutShapeSync(): org_weasis_opencv_op_lut_LutShape | null;
    /**
     * @return original return type: 'boolean'
     */
    isInverseLut(): Promise<boolean>;
    /**
     * @return original return type: 'boolean'
     */
    isInverseLutSync(): boolean;
    /**
     * @return original return type: 'boolean'
     */
    isAllowWinLevelOnColorImage(): Promise<boolean>;
    /**
     * @return original return type: 'boolean'
     */
    isAllowWinLevelOnColorImageSync(): boolean;
    /**
     * @return original return type: 'boolean'
     */
    isPixelPadding(): Promise<boolean>;
    /**
     * @return original return type: 'boolean'
     */
    isPixelPaddingSync(): boolean;
    /**
     * @return original return type: 'double'
     */
    getLevelMax(): Promise<number>;
    /**
     * @return original return type: 'double'
     */
    getLevelMaxSync(): number;
    /**
     * @return original return type: 'double'
     */
    getLevelMin(): Promise<number>;
    /**
     * @return original return type: 'double'
     */
    getLevelMinSync(): number;
}
/**
 * This interface just defines types for creating proxies,
 * you should use {@link createWlParamsProxy} for actually creating the proxies.
 *
 * Optional methods in here may still be required by java.
 * This is caused by typescript not allowing to have both optional and
 * non-optional signatures for the same interface member.
 *
 * This was generated by java-bridge.
 * You should probably not edit this.
 */
export interface WlParamsInterface {
    /**
     * @return original return type: 'double'
     */
    getLevel(): number;
    /**
     * @return original return type: 'double'
     */
    getWindow(): number;
    /**
     * @return original return type: 'org.weasis.opencv.op.lut.PresentationStateLut'
     */
    getPresentationState(): org_weasis_opencv_op_lut_PresentationStateLut | null;
    /**
     * @return original return type: 'boolean'
     */
    isFillOutsideLutRange(): boolean;
    /**
     * @return original return type: 'org.weasis.opencv.op.lut.LutShape'
     */
    getLutShape(): org_weasis_opencv_op_lut_LutShape | null;
    /**
     * @return original return type: 'boolean'
     */
    isInverseLut(): boolean;
    /**
     * @return original return type: 'boolean'
     */
    isAllowWinLevelOnColorImage(): boolean;
    /**
     * @return original return type: 'boolean'
     */
    isPixelPadding(): boolean;
    /**
     * @return original return type: 'double'
     */
    getLevelMax(): number;
    /**
     * @return original return type: 'double'
     */
    getLevelMin(): number;
}
/**
 * Create a proxy for the {@link WlParams} interface.
 * All required methods in {@link WlParamsInterface} must be implemented.
 *
 * @param methods the methods to implement
 * @param opts the proxy options
 * @return the proxy
 */
export declare function createWlParamsProxy(methods: WlParamsInterface, opts?: InterfaceProxyOptions): JavaInterfaceProxy<WlParamsInterface>;
declare const WlParams_base: typeof WlParamsClass;
/**
 * Class org.weasis.opencv.op.lut.WlParams.
 *
 * This actually imports the java class for further use.
 * The class {@link WlParamsClass} only defines types, this is the class you should actually import.
 * Please note that this statement imports the underlying java class at runtime, which may take a while.
 * This was generated by java-bridge.
 * You should probably not edit this.
 */
export declare class WlParams extends WlParams_base {
    /**
     * Private constructor to prevent instantiation
     * as this is either an abstract class or an interface
     */
    private constructor();
}
export default WlParams;
