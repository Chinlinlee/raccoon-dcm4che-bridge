import { JavaClass, BasicOrJavaType, JavaInterfaceProxy } from "java-bridge";
import { Class as java_lang_Class } from "./../../../java/lang/Class";
import { Mat as org_opencv_core_Mat } from "./../core/Mat";
import { Integer as java_lang_Integer } from "./../../../java/lang/Integer";
import { MatOfByte as org_opencv_core_MatOfByte } from "./../core/MatOfByte";
import { MatOfInt as org_opencv_core_MatOfInt } from "./../core/MatOfInt";
import { Long as java_lang_Long } from "./../../../java/lang/Long";
import { List as java_util_List, ListInterface as java_util_ListInterface } from "./../../../java/util/List";
import { MatOfDouble as org_opencv_core_MatOfDouble } from "./../core/MatOfDouble";
import { Range as org_opencv_core_Range } from "./../core/Range";
/**
 * This class just defines types, you should import {@link Imgcodecs} instead of this.
 * This was generated by java-bridge.
 * You should probably not edit this.
 */
export declare class ImgcodecsClass extends JavaClass {
    /**
     * @return original return type: 'java.lang.Class'
     */
    getClass(): Promise<java_lang_Class>;
    /**
     * @return original return type: 'java.lang.Class'
     */
    getClassSync(): java_lang_Class;
    /**
     * @param var0 original type: 'org.opencv.core.Mat'
     * @param var1 original type: 'int'
     * @return original return type: 'org.opencv.core.Mat'
     */
    static dicomJpgMatRead(var0: org_opencv_core_Mat | null, var1: java_lang_Integer | number): Promise<org_opencv_core_Mat | null>;
    /**
     * @param var0 original type: 'org.opencv.core.Mat'
     * @param var1 original type: 'int'
     * @return original return type: 'org.opencv.core.Mat'
     */
    static dicomJpgMatReadSync(var0: org_opencv_core_Mat | null, var1: java_lang_Integer | number): org_opencv_core_Mat | null;
    /**
     * @param var0 original type: 'org.opencv.core.Mat'
     * @return original return type: 'org.opencv.core.Mat'
     */
    static dicomJpgMatRead(var0: org_opencv_core_Mat | null): Promise<org_opencv_core_Mat | null>;
    /**
     * @param var0 original type: 'org.opencv.core.Mat'
     * @return original return type: 'org.opencv.core.Mat'
     */
    static dicomJpgMatReadSync(var0: org_opencv_core_Mat | null): org_opencv_core_Mat | null;
    /**
     * @param var0 original type: 'org.opencv.core.Mat'
     * @param var1 original type: 'int'
     * @param var2 original type: 'int'
     * @return original return type: 'org.opencv.core.Mat'
     */
    static dicomJpgMatRead(var0: org_opencv_core_Mat | null, var1: java_lang_Integer | number, var2: java_lang_Integer | number): Promise<org_opencv_core_Mat | null>;
    /**
     * @param var0 original type: 'org.opencv.core.Mat'
     * @param var1 original type: 'int'
     * @param var2 original type: 'int'
     * @return original return type: 'org.opencv.core.Mat'
     */
    static dicomJpgMatReadSync(var0: org_opencv_core_Mat | null, var1: java_lang_Integer | number, var2: java_lang_Integer | number): org_opencv_core_Mat | null;
    /**
     * @param var0 original type: 'java.lang.String'
     * @param var1 original type: 'org.opencv.core.Mat'
     * @param var2 original type: 'org.opencv.core.MatOfByte'
     * @return original return type: 'boolean'
     */
    static imencode(var0: string | null, var1: org_opencv_core_Mat | null, var2: org_opencv_core_MatOfByte | null): Promise<boolean>;
    /**
     * @param var0 original type: 'java.lang.String'
     * @param var1 original type: 'org.opencv.core.Mat'
     * @param var2 original type: 'org.opencv.core.MatOfByte'
     * @return original return type: 'boolean'
     */
    static imencodeSync(var0: string | null, var1: org_opencv_core_Mat | null, var2: org_opencv_core_MatOfByte | null): boolean;
    /**
     * @param var0 original type: 'java.lang.String'
     * @param var1 original type: 'org.opencv.core.Mat'
     * @param var2 original type: 'org.opencv.core.MatOfByte'
     * @param var3 original type: 'org.opencv.core.MatOfInt'
     * @return original return type: 'boolean'
     */
    static imencode(var0: string | null, var1: org_opencv_core_Mat | null, var2: org_opencv_core_MatOfByte | null, var3: org_opencv_core_MatOfInt | null): Promise<boolean>;
    /**
     * @param var0 original type: 'java.lang.String'
     * @param var1 original type: 'org.opencv.core.Mat'
     * @param var2 original type: 'org.opencv.core.MatOfByte'
     * @param var3 original type: 'org.opencv.core.MatOfInt'
     * @return original return type: 'boolean'
     */
    static imencodeSync(var0: string | null, var1: org_opencv_core_Mat | null, var2: org_opencv_core_MatOfByte | null, var3: org_opencv_core_MatOfInt | null): boolean;
    /**
     * @param var0 original type: 'long'
     * @param var1 original type: 'int'
     * @return original return type: 'void'
     */
    wait(var0: java_lang_Long | bigint | number, var1: java_lang_Integer | number): Promise<void>;
    /**
     * @param var0 original type: 'long'
     * @param var1 original type: 'int'
     * @return original return type: 'void'
     */
    waitSync(var0: java_lang_Long | bigint | number, var1: java_lang_Integer | number): void;
    /**
     * @return original return type: 'void'
     */
    wait(): Promise<void>;
    /**
     * @return original return type: 'void'
     */
    waitSync(): void;
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'void'
     */
    wait(var0: java_lang_Long | bigint | number): Promise<void>;
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'void'
     */
    waitSync(var0: java_lang_Long | bigint | number): void;
    /**
     * @param var0 original type: 'org.opencv.core.Mat'
     * @param var1 original type: 'org.opencv.core.MatOfInt'
     * @param var2 original type: 'java.lang.String'
     * @return original return type: 'org.opencv.core.Mat'
     */
    static dicomRawMatRead(var0: org_opencv_core_Mat | null, var1: org_opencv_core_MatOfInt | null, var2: string | null): Promise<org_opencv_core_Mat | null>;
    /**
     * @param var0 original type: 'org.opencv.core.Mat'
     * @param var1 original type: 'org.opencv.core.MatOfInt'
     * @param var2 original type: 'java.lang.String'
     * @return original return type: 'org.opencv.core.Mat'
     */
    static dicomRawMatReadSync(var0: org_opencv_core_Mat | null, var1: org_opencv_core_MatOfInt | null, var2: string | null): org_opencv_core_Mat | null;
    /**
     * @param var0 original type: 'java.lang.String'
     * @param var1 original type: 'java.util.List'
     * @param var2 original type: 'int'
     * @return original return type: 'boolean'
     */
    static imreadmulti(var0: string | null, var1: java_util_List | JavaInterfaceProxy<java_util_ListInterface> | null, var2: java_lang_Integer | number): Promise<boolean>;
    /**
     * @param var0 original type: 'java.lang.String'
     * @param var1 original type: 'java.util.List'
     * @param var2 original type: 'int'
     * @return original return type: 'boolean'
     */
    static imreadmultiSync(var0: string | null, var1: java_util_List | JavaInterfaceProxy<java_util_ListInterface> | null, var2: java_lang_Integer | number): boolean;
    /**
     * @param var0 original type: 'java.lang.String'
     * @param var1 original type: 'java.util.List'
     * @param var2 original type: 'int'
     * @param var3 original type: 'int'
     * @return original return type: 'boolean'
     */
    static imreadmulti(var0: string | null, var1: java_util_List | JavaInterfaceProxy<java_util_ListInterface> | null, var2: java_lang_Integer | number, var3: java_lang_Integer | number): Promise<boolean>;
    /**
     * @param var0 original type: 'java.lang.String'
     * @param var1 original type: 'java.util.List'
     * @param var2 original type: 'int'
     * @param var3 original type: 'int'
     * @return original return type: 'boolean'
     */
    static imreadmultiSync(var0: string | null, var1: java_util_List | JavaInterfaceProxy<java_util_ListInterface> | null, var2: java_lang_Integer | number, var3: java_lang_Integer | number): boolean;
    /**
     * @param var0 original type: 'java.lang.String'
     * @param var1 original type: 'java.util.List'
     * @param var2 original type: 'int'
     * @param var3 original type: 'int'
     * @param var4 original type: 'int'
     * @return original return type: 'boolean'
     */
    static imreadmulti(var0: string | null, var1: java_util_List | JavaInterfaceProxy<java_util_ListInterface> | null, var2: java_lang_Integer | number, var3: java_lang_Integer | number, var4: java_lang_Integer | number): Promise<boolean>;
    /**
     * @param var0 original type: 'java.lang.String'
     * @param var1 original type: 'java.util.List'
     * @param var2 original type: 'int'
     * @param var3 original type: 'int'
     * @param var4 original type: 'int'
     * @return original return type: 'boolean'
     */
    static imreadmultiSync(var0: string | null, var1: java_util_List | JavaInterfaceProxy<java_util_ListInterface> | null, var2: java_lang_Integer | number, var3: java_lang_Integer | number, var4: java_lang_Integer | number): boolean;
    /**
     * @param var0 original type: 'java.lang.String'
     * @param var1 original type: 'java.util.List'
     * @return original return type: 'boolean'
     */
    static imreadmulti(var0: string | null, var1: java_util_List | JavaInterfaceProxy<java_util_ListInterface> | null): Promise<boolean>;
    /**
     * @param var0 original type: 'java.lang.String'
     * @param var1 original type: 'java.util.List'
     * @return original return type: 'boolean'
     */
    static imreadmultiSync(var0: string | null, var1: java_util_List | JavaInterfaceProxy<java_util_ListInterface> | null): boolean;
    /**
     * @param var0 original type: 'java.lang.String'
     * @param var1 original type: 'org.opencv.core.MatOfDouble'
     * @param var2 original type: 'org.opencv.core.MatOfDouble'
     * @param var3 original type: 'org.opencv.core.MatOfInt'
     * @param var4 original type: 'java.lang.String'
     * @return original return type: 'org.opencv.core.Mat'
     */
    static dicomRawFileRead(var0: string | null, var1: org_opencv_core_MatOfDouble | null, var2: org_opencv_core_MatOfDouble | null, var3: org_opencv_core_MatOfInt | null, var4: string | null): Promise<org_opencv_core_Mat | null>;
    /**
     * @param var0 original type: 'java.lang.String'
     * @param var1 original type: 'org.opencv.core.MatOfDouble'
     * @param var2 original type: 'org.opencv.core.MatOfDouble'
     * @param var3 original type: 'org.opencv.core.MatOfInt'
     * @param var4 original type: 'java.lang.String'
     * @return original return type: 'org.opencv.core.Mat'
     */
    static dicomRawFileReadSync(var0: string | null, var1: org_opencv_core_MatOfDouble | null, var2: org_opencv_core_MatOfDouble | null, var3: org_opencv_core_MatOfInt | null, var4: string | null): org_opencv_core_Mat | null;
    /**
     * @param var0 original type: 'java.lang.String'
     * @param var1 original type: 'java.util.List'
     * @return original return type: 'boolean'
     */
    static imwritemulti(var0: string | null, var1: java_util_List | JavaInterfaceProxy<java_util_ListInterface> | null): Promise<boolean>;
    /**
     * @param var0 original type: 'java.lang.String'
     * @param var1 original type: 'java.util.List'
     * @return original return type: 'boolean'
     */
    static imwritemultiSync(var0: string | null, var1: java_util_List | JavaInterfaceProxy<java_util_ListInterface> | null): boolean;
    /**
     * @param var0 original type: 'java.lang.String'
     * @param var1 original type: 'java.util.List'
     * @param var2 original type: 'org.opencv.core.MatOfInt'
     * @return original return type: 'boolean'
     */
    static imwritemulti(var0: string | null, var1: java_util_List | JavaInterfaceProxy<java_util_ListInterface> | null, var2: org_opencv_core_MatOfInt | null): Promise<boolean>;
    /**
     * @param var0 original type: 'java.lang.String'
     * @param var1 original type: 'java.util.List'
     * @param var2 original type: 'org.opencv.core.MatOfInt'
     * @return original return type: 'boolean'
     */
    static imwritemultiSync(var0: string | null, var1: java_util_List | JavaInterfaceProxy<java_util_ListInterface> | null, var2: org_opencv_core_MatOfInt | null): boolean;
    /**
     * @return original return type: 'void'
     */
    notifyAll(): Promise<void>;
    /**
     * @return original return type: 'void'
     */
    notifyAllSync(): void;
    /**
     * @param var0 original type: 'java.lang.String'
     * @param var1 original type: 'org.opencv.core.Mat'
     * @return original return type: 'boolean'
     */
    static imwrite(var0: string | null, var1: org_opencv_core_Mat | null): Promise<boolean>;
    /**
     * @param var0 original type: 'java.lang.String'
     * @param var1 original type: 'org.opencv.core.Mat'
     * @return original return type: 'boolean'
     */
    static imwriteSync(var0: string | null, var1: org_opencv_core_Mat | null): boolean;
    /**
     * @param var0 original type: 'java.lang.String'
     * @param var1 original type: 'org.opencv.core.Mat'
     * @param var2 original type: 'org.opencv.core.MatOfInt'
     * @return original return type: 'boolean'
     */
    static imwrite(var0: string | null, var1: org_opencv_core_Mat | null, var2: org_opencv_core_MatOfInt | null): Promise<boolean>;
    /**
     * @param var0 original type: 'java.lang.String'
     * @param var1 original type: 'org.opencv.core.Mat'
     * @param var2 original type: 'org.opencv.core.MatOfInt'
     * @return original return type: 'boolean'
     */
    static imwriteSync(var0: string | null, var1: org_opencv_core_Mat | null, var2: org_opencv_core_MatOfInt | null): boolean;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'boolean'
     */
    static haveImageWriter(var0: string | null): Promise<boolean>;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'boolean'
     */
    static haveImageWriterSync(var0: string | null): boolean;
    /**
     * @param var0 original type: 'java.lang.String'
     * @param var1 original type: 'org.opencv.core.MatOfDouble'
     * @param var2 original type: 'org.opencv.core.MatOfDouble'
     * @param var3 original type: 'int'
     * @param var4 original type: 'int'
     * @return original return type: 'org.opencv.core.Mat'
     */
    static dicomJpgFileRead(var0: string | null, var1: org_opencv_core_MatOfDouble | null, var2: org_opencv_core_MatOfDouble | null, var3: java_lang_Integer | number, var4: java_lang_Integer | number): Promise<org_opencv_core_Mat | null>;
    /**
     * @param var0 original type: 'java.lang.String'
     * @param var1 original type: 'org.opencv.core.MatOfDouble'
     * @param var2 original type: 'org.opencv.core.MatOfDouble'
     * @param var3 original type: 'int'
     * @param var4 original type: 'int'
     * @return original return type: 'org.opencv.core.Mat'
     */
    static dicomJpgFileReadSync(var0: string | null, var1: org_opencv_core_MatOfDouble | null, var2: org_opencv_core_MatOfDouble | null, var3: java_lang_Integer | number, var4: java_lang_Integer | number): org_opencv_core_Mat | null;
    /**
     * @param var0 original type: 'java.lang.String'
     * @param var1 original type: 'org.opencv.core.MatOfDouble'
     * @param var2 original type: 'org.opencv.core.MatOfDouble'
     * @param var3 original type: 'int'
     * @return original return type: 'org.opencv.core.Mat'
     */
    static dicomJpgFileRead(var0: string | null, var1: org_opencv_core_MatOfDouble | null, var2: org_opencv_core_MatOfDouble | null, var3: java_lang_Integer | number): Promise<org_opencv_core_Mat | null>;
    /**
     * @param var0 original type: 'java.lang.String'
     * @param var1 original type: 'org.opencv.core.MatOfDouble'
     * @param var2 original type: 'org.opencv.core.MatOfDouble'
     * @param var3 original type: 'int'
     * @return original return type: 'org.opencv.core.Mat'
     */
    static dicomJpgFileReadSync(var0: string | null, var1: org_opencv_core_MatOfDouble | null, var2: org_opencv_core_MatOfDouble | null, var3: java_lang_Integer | number): org_opencv_core_Mat | null;
    /**
     * @param var0 original type: 'java.lang.String'
     * @param var1 original type: 'org.opencv.core.MatOfDouble'
     * @param var2 original type: 'org.opencv.core.MatOfDouble'
     * @return original return type: 'org.opencv.core.Mat'
     */
    static dicomJpgFileRead(var0: string | null, var1: org_opencv_core_MatOfDouble | null, var2: org_opencv_core_MatOfDouble | null): Promise<org_opencv_core_Mat | null>;
    /**
     * @param var0 original type: 'java.lang.String'
     * @param var1 original type: 'org.opencv.core.MatOfDouble'
     * @param var2 original type: 'org.opencv.core.MatOfDouble'
     * @return original return type: 'org.opencv.core.Mat'
     */
    static dicomJpgFileReadSync(var0: string | null, var1: org_opencv_core_MatOfDouble | null, var2: org_opencv_core_MatOfDouble | null): org_opencv_core_Mat | null;
    /**
     * @param var0 original type: 'org.opencv.core.Mat'
     * @param var1 original type: 'int'
     * @param var2 original type: 'java.util.List'
     * @param var3 original type: 'org.opencv.core.Range'
     * @return original return type: 'boolean'
     */
    static imdecodemulti(var0: org_opencv_core_Mat | null, var1: java_lang_Integer | number, var2: java_util_List | JavaInterfaceProxy<java_util_ListInterface> | null, var3: org_opencv_core_Range | null): Promise<boolean>;
    /**
     * @param var0 original type: 'org.opencv.core.Mat'
     * @param var1 original type: 'int'
     * @param var2 original type: 'java.util.List'
     * @param var3 original type: 'org.opencv.core.Range'
     * @return original return type: 'boolean'
     */
    static imdecodemultiSync(var0: org_opencv_core_Mat | null, var1: java_lang_Integer | number, var2: java_util_List | JavaInterfaceProxy<java_util_ListInterface> | null, var3: org_opencv_core_Range | null): boolean;
    /**
     * @param var0 original type: 'org.opencv.core.Mat'
     * @param var1 original type: 'int'
     * @param var2 original type: 'java.util.List'
     * @return original return type: 'boolean'
     */
    static imdecodemulti(var0: org_opencv_core_Mat | null, var1: java_lang_Integer | number, var2: java_util_List | JavaInterfaceProxy<java_util_ListInterface> | null): Promise<boolean>;
    /**
     * @param var0 original type: 'org.opencv.core.Mat'
     * @param var1 original type: 'int'
     * @param var2 original type: 'java.util.List'
     * @return original return type: 'boolean'
     */
    static imdecodemultiSync(var0: org_opencv_core_Mat | null, var1: java_lang_Integer | number, var2: java_util_List | JavaInterfaceProxy<java_util_ListInterface> | null): boolean;
    /**
     * @return original return type: 'void'
     */
    notify(): Promise<void>;
    /**
     * @return original return type: 'void'
     */
    notifySync(): void;
    /**
     * @param var0 original type: 'org.opencv.core.Mat'
     * @param var1 original type: 'org.opencv.core.MatOfInt'
     * @param var2 original type: 'java.lang.String'
     * @return original return type: 'org.opencv.core.Mat'
     */
    static dicomJpgWrite(var0: org_opencv_core_Mat | null, var1: org_opencv_core_MatOfInt | null, var2: string | null): Promise<org_opencv_core_Mat | null>;
    /**
     * @param var0 original type: 'org.opencv.core.Mat'
     * @param var1 original type: 'org.opencv.core.MatOfInt'
     * @param var2 original type: 'java.lang.String'
     * @return original return type: 'org.opencv.core.Mat'
     */
    static dicomJpgWriteSync(var0: org_opencv_core_Mat | null, var1: org_opencv_core_MatOfInt | null, var2: string | null): org_opencv_core_Mat | null;
    /**
     * @return original return type: 'int'
     */
    hashCode(): Promise<number>;
    /**
     * @return original return type: 'int'
     */
    hashCodeSync(): number;
    /**
     * @param var0 original type: 'org.opencv.core.Mat'
     * @param var1 original type: 'int'
     * @return original return type: 'org.opencv.core.Mat'
     */
    static imdecode(var0: org_opencv_core_Mat | null, var1: java_lang_Integer | number): Promise<org_opencv_core_Mat | null>;
    /**
     * @param var0 original type: 'org.opencv.core.Mat'
     * @param var1 original type: 'int'
     * @return original return type: 'org.opencv.core.Mat'
     */
    static imdecodeSync(var0: org_opencv_core_Mat | null, var1: java_lang_Integer | number): org_opencv_core_Mat | null;
    /**
     * @param var0 original type: 'java.lang.Object'
     * @return original return type: 'boolean'
     */
    equals(var0: BasicOrJavaType | null): Promise<boolean>;
    /**
     * @param var0 original type: 'java.lang.Object'
     * @return original return type: 'boolean'
     */
    equalsSync(var0: BasicOrJavaType | null): boolean;
    /**
     * @param var0 original type: 'java.lang.String'
     * @param var1 original type: 'java.util.List'
     * @return original return type: 'org.opencv.core.Mat'
     */
    static imread(var0: string | null, var1: java_util_List | JavaInterfaceProxy<java_util_ListInterface> | null): Promise<org_opencv_core_Mat | null>;
    /**
     * @param var0 original type: 'java.lang.String'
     * @param var1 original type: 'java.util.List'
     * @return original return type: 'org.opencv.core.Mat'
     */
    static imreadSync(var0: string | null, var1: java_util_List | JavaInterfaceProxy<java_util_ListInterface> | null): org_opencv_core_Mat | null;
    /**
     * @param var0 original type: 'java.lang.String'
     * @param var1 original type: 'java.util.List'
     * @param var2 original type: 'int'
     * @return original return type: 'org.opencv.core.Mat'
     */
    static imread(var0: string | null, var1: java_util_List | JavaInterfaceProxy<java_util_ListInterface> | null, var2: java_lang_Integer | number): Promise<org_opencv_core_Mat | null>;
    /**
     * @param var0 original type: 'java.lang.String'
     * @param var1 original type: 'java.util.List'
     * @param var2 original type: 'int'
     * @return original return type: 'org.opencv.core.Mat'
     */
    static imreadSync(var0: string | null, var1: java_util_List | JavaInterfaceProxy<java_util_ListInterface> | null, var2: java_lang_Integer | number): org_opencv_core_Mat | null;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'boolean'
     */
    static haveImageReader(var0: string | null): Promise<boolean>;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'boolean'
     */
    static haveImageReaderSync(var0: string | null): boolean;
    /**
     * @param var0 original type: 'java.lang.String'
     * @param var1 original type: 'int'
     * @return original return type: 'long'
     */
    static imcount(var0: string | null, var1: java_lang_Integer | number): Promise<number>;
    /**
     * @param var0 original type: 'java.lang.String'
     * @param var1 original type: 'int'
     * @return original return type: 'long'
     */
    static imcountSync(var0: string | null, var1: java_lang_Integer | number): number;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'long'
     */
    static imcount(var0: string | null): Promise<number>;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'long'
     */
    static imcountSync(var0: string | null): number;
    /**
     * Original type: 'int'
     */
    static readonly IMWRITE_PNG_STRATEGY_HUFFMAN_ONLY: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly EPI_Unknown: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly DICOM_FLAG_DEFAULT: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly DICOM_FLAG_SIGNED: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly IMWRITE_WEBP_QUALITY: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly DICOM_CP_JPG: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly JPEG_progressive: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly EPI_YBR_Full_422: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly IMWRITE_JPEG_SAMPLING_FACTOR_411: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly DICOM_PARAM_HEIGHT: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly JPEG_baseline: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly IMWRITE_PNG_STRATEGY: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly IMWRITE_EXR_COMPRESSION_ZIPS: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly IMWRITE_EXR_TYPE_FLOAT: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly DICOM_PARAM_JPEG_MODE: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly EPI_CMYK: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly IMREAD_ANYDEPTH: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly EPI_PaletteColor: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly DICOM_PARAM_JPEG_QUALITY: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly IMWRITE_TIFF_COMPRESSION: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly DICOM_CP_JPLS: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly IMWRITE_PAM_FORMAT_BLACKANDWHITE: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly IMWRITE_EXR_COMPRESSION_B44: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly IMWRITE_JPEG_SAMPLING_FACTOR_422: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly IMWRITE_TIFF_XDPI: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly EPI_HSV: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly IMWRITE_EXR_COMPRESSION_RLE: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly IMWRITE_PAM_TUPLETYPE: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly IMWRITE_PXM_BINARY: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly IMWRITE_JPEG_SAMPLING_FACTOR_420: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly IMWRITE_JPEG_LUMA_QUALITY: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly IMWRITE_TIFF_RESUNIT: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly DICOM_FLAG_FORCE_RGB_CONVERSION: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly EPI_RGB: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly EPI_YBR_Partial_422: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly DICOM_PARAM_JPEGLS_LOSSY_ERROR: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly DICOM_PARAM_WIDTH: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly IMWRITE_EXR_COMPRESSION_NO: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly POS_MODEL: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly IMWRITE_PNG_BILEVEL: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly DICOM_PARAM_COLOR_MODEL: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly POS_DATE_TIME: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly JPEG_spectralSelection: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly IMWRITE_EXR_DWA_COMPRESSION_LEVEL: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly IMREAD_GRAYSCALE: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly IMWRITE_HDR_COMPRESSION_NONE: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly IMWRITE_PAM_FORMAT_GRAYSCALE: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly POS_YRESOLUTION: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly IMWRITE_PNG_COMPRESSION: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly JPEG_lossless: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly POS_COPYRIGHT: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly IMWRITE_PAM_FORMAT_RGB: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly JPEG_sequential: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly POS_RESOLUTION_UNIT: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly IMWRITE_EXR_COMPRESSION_ZIP: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly IMWRITE_EXR_COMPRESSION: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly IMWRITE_JPEG_SAMPLING_FACTOR_444: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly ILV_SAMPLE: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly DICOM_PARAM_COMPONENTS: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly IMWRITE_JPEG_SAMPLING_FACTOR_440: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly DICOM_PARAM_IMREAD: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly POS_MAKE: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly IMWRITE_PNG_STRATEGY_FIXED: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly IMWRITE_PAM_FORMAT_RGB_ALPHA: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly IMWRITE_AVIF_QUALITY: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly IMWRITE_AVIF_SPEED: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly IMWRITE_JPEG_RST_INTERVAL: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly IMWRITE_JPEG_PROGRESSIVE: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly EPI_YBR_Full: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly IMWRITE_EXR_COMPRESSION_PXR24: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly DICOM_PARAM_J2K_COMPRESSION_FACTOR: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly DICOM_FLAG_YBR: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly DICOM_PARAM_JPEG_PREDICTION: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly IMWRITE_HDR_COMPRESSION: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly IMWRITE_JPEG_QUALITY: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly IMREAD_LOAD_GDAL: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly IMWRITE_AVIF_DEPTH: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly DICOM_PARAM_BITS_PER_SAMPLE: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly IMREAD_IGNORE_ORIENTATION: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly IMWRITE_PNG_STRATEGY_FILTERED: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly ILV_LINE: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly DICOM_FLAG_FLOAT: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly DICOM_FLAG_UNSIGNED: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly IMWRITE_PNG_STRATEGY_DEFAULT: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly IMWRITE_JPEG_CHROMA_QUALITY: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly IMWRITE_PAM_FORMAT_NULL: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly DICOM_FLAG_RLE: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly EPI_Missing: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly IMWRITE_HDR_COMPRESSION_RLE: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly IMWRITE_EXR_COMPRESSION_DWAA: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly IMWRITE_JPEG2000_COMPRESSION_X1000: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly IMWRITE_EXR_COMPRESSION_DWAB: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly DICOM_CP_UNKNOWN: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly IMREAD_UNCHANGED: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly EPI_Monochrome1: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly EPI_Monochrome2: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly IMREAD_REDUCED_COLOR_4: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly IMREAD_REDUCED_COLOR_2: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly IMREAD_REDUCED_COLOR_8: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly IMREAD_REDUCED_GRAYSCALE_2: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly POS_SOFTWARE: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly IMREAD_REDUCED_GRAYSCALE_4: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly IMWRITE_TIFF_YDPI: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly IMREAD_REDUCED_GRAYSCALE_8: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly ILV_NONE: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly DICOM_PARAM_JPEG_PT_TRANSFORM: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly DICOM_PARAM_DCM_IMREAD: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly IMREAD_COLOR: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly DICOM_PARAM_COMPRESSION: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly POS_ORIENTATION: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly IMWRITE_JPEG_OPTIMIZE: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly IMWRITE_PAM_FORMAT_GRAYSCALE_ALPHA: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly DICOM_FLAG_BIGENDIAN: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly POS_IMAGE_DESCRIPTION: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly DICOM_PARAM_STREAM_VR: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly IMWRITE_EXR_COMPRESSION_PIZ: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly EPI_ARGB: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly DICOM_CP_J2K: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly IMWRITE_PNG_STRATEGY_RLE: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly IMWRITE_EXR_TYPE: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly IMWRITE_EXR_COMPRESSION_B44A: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly POS_XRESOLUTION: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly IMWRITE_EXR_TYPE_HALF: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly IMREAD_ANYCOLOR: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly IMWRITE_JPEG_SAMPLING_FACTOR: java_lang_Integer | number;
    /**
     * Original type: 'int'
     */
    static readonly DICOM_PARAM_INTERLEAVE_MODE: java_lang_Integer | number;
    constructor();
    /**
     * @return original return type: 'org.opencv.imgcodecs.Imgcodecs'
     */
    static newInstanceAsync(): Promise<Imgcodecs>;
}
declare const Imgcodecs_base: typeof ImgcodecsClass;
/**
 * Class org.opencv.imgcodecs.Imgcodecs.
 *
 * This actually imports the java class for further use.
 * The class {@link ImgcodecsClass} only defines types, this is the class you should actually import.
 * Please note that this statement imports the underlying java class at runtime, which may take a while.
 * This was generated by java-bridge.
 * You should probably not edit this.
 */
export declare class Imgcodecs extends Imgcodecs_base {
}
export default Imgcodecs;
