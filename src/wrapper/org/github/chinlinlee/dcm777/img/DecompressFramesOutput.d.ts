import { JavaClass, BasicOrJavaType } from "java-bridge";
import { Class as java_lang_Class } from "./../../../../../java/lang/Class";
import { Long as java_lang_Long } from "./../../../../../java/lang/Long";
import { Integer as java_lang_Integer } from "./../../../../../java/lang/Integer";
import { OutputStream as java_io_OutputStream } from "./../../../../../java/io/OutputStream";
import { DicomInputStream as org_dcm4che3_io_DicomInputStream } from "./../../../../dcm4che3/io/DicomInputStream";
/**
 * This class just defines types, you should import {@link DecompressFramesOutput} instead of this.
 * This was generated by java-bridge.
 * You should probably not edit this.
 */
export declare class DecompressFramesOutputClass extends JavaClass {
    /**
     * @return original return type: 'java.lang.Class'
     */
    getClass(): Promise<java_lang_Class>;
    /**
     * @return original return type: 'java.lang.Class'
     */
    getClassSync(): java_lang_Class;
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'void'
     */
    wait(var0: java_lang_Long | bigint | number): Promise<void>;
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'void'
     */
    waitSync(var0: java_lang_Long | bigint | number): void;
    /**
     * @param var0 original type: 'long'
     * @param var1 original type: 'int'
     * @return original return type: 'void'
     */
    wait(var0: java_lang_Long | bigint | number, var1: java_lang_Integer | number): Promise<void>;
    /**
     * @param var0 original type: 'long'
     * @param var1 original type: 'int'
     * @return original return type: 'void'
     */
    waitSync(var0: java_lang_Long | bigint | number, var1: java_lang_Integer | number): void;
    /**
     * @return original return type: 'void'
     */
    wait(): Promise<void>;
    /**
     * @return original return type: 'void'
     */
    waitSync(): void;
    /**
     * @param var0 original type: 'java.io.OutputStream'
     * @return original return type: 'void'
     */
    writeFrameTo(var0: java_io_OutputStream | null): Promise<void>;
    /**
     * @param var0 original type: 'java.io.OutputStream'
     * @return original return type: 'void'
     */
    writeFrameToSync(var0: java_io_OutputStream | null): void;
    /**
     * @return original return type: 'int'
     */
    hashCode(): Promise<number>;
    /**
     * @return original return type: 'int'
     */
    hashCodeSync(): number;
    /**
     * @param var0 original type: 'java.lang.Object'
     * @return original return type: 'boolean'
     */
    equals(var0: BasicOrJavaType | null): Promise<boolean>;
    /**
     * @param var0 original type: 'java.lang.Object'
     * @return original return type: 'boolean'
     */
    equalsSync(var0: BasicOrJavaType | null): boolean;
    /**
     * @return original return type: 'void'
     */
    notifyAll(): Promise<void>;
    /**
     * @return original return type: 'void'
     */
    notifyAllSync(): void;
    /**
     * @param var0 original type: 'java.io.OutputStream'
     * @return original return type: 'void'
     */
    write(var0: java_io_OutputStream | null): Promise<void>;
    /**
     * @param var0 original type: 'java.io.OutputStream'
     * @return original return type: 'void'
     */
    writeSync(var0: java_io_OutputStream | null): void;
    /**
     * @return original return type: 'void'
     */
    close(): Promise<void>;
    /**
     * @return original return type: 'void'
     */
    closeSync(): void;
    /**
     * @return original return type: 'void'
     */
    notify(): Promise<void>;
    /**
     * @return original return type: 'void'
     */
    notifySync(): void;
    /**
     * @param var0 original type: 'org.dcm4che3.io.DicomInputStream'
     * @param var1 original type: 'int'
     */
    constructor(var0: org_dcm4che3_io_DicomInputStream | null, var1: java_lang_Integer | number);
    /**
     * @param var0 original type: 'org.dcm4che3.io.DicomInputStream'
     * @param var1 original type: 'int'
     * @return original return type: 'org.github.chinlinlee.dcm777.img.DecompressFramesOutput'
     */
    static newInstanceAsync(var0: org_dcm4che3_io_DicomInputStream | null, var1: java_lang_Integer | number): Promise<DecompressFramesOutput>;
}
declare const DecompressFramesOutput_base: typeof DecompressFramesOutputClass;
/**
 * Class org.github.chinlinlee.dcm777.img.DecompressFramesOutput.
 *
 * This actually imports the java class for further use.
 * The class {@link DecompressFramesOutputClass} only defines types, this is the class you should actually import.
 * Please note that this statement imports the underlying java class at runtime, which may take a while.
 * This was generated by java-bridge.
 * You should probably not edit this.
 */
export declare class DecompressFramesOutput extends DecompressFramesOutput_base {
}
export default DecompressFramesOutput;
//# sourceMappingURL=DecompressFramesOutput.d.ts.map