import { JavaClass, BasicOrJavaType } from "java-bridge";
import { Throwable as java_lang_Throwable } from "./../../../../java/lang/Throwable";
import { Class as java_lang_Class } from "./../../../../java/lang/Class";
import { Long as java_lang_Long } from "./../../../../java/lang/Long";
import { Integer as java_lang_Integer } from "./../../../../java/lang/Integer";
import { Attributes as org_dcm4che3_data_Attributes } from "./../../data/Attributes";
import { StackTraceElement as java_lang_StackTraceElement } from "./../../../../java/lang/StackTraceElement";
import { PrintWriter as java_io_PrintWriter } from "./../../../../java/io/PrintWriter";
import { PrintStream as java_io_PrintStream } from "./../../../../java/io/PrintStream";
import { ValidationResult as org_dcm4che3_data_ValidationResult } from "./../../data/ValidationResult";
import { Boolean as java_lang_Boolean } from "./../../../../java/lang/Boolean";
/**
 * This class just defines types, you should import {@link DicomServiceException} instead of this.
 * This was generated by java-bridge.
 * You should probably not edit this.
 */
export declare class DicomServiceExceptionClass extends JavaClass {
    /**
     * @param var0 original type: 'java.lang.Throwable'
     * @return original return type: 'java.lang.Throwable'
     */
    static initialCauseOf(var0: java_lang_Throwable | null): Promise<java_lang_Throwable | null>;
    /**
     * @param var0 original type: 'java.lang.Throwable'
     * @return original return type: 'java.lang.Throwable'
     */
    static initialCauseOfSync(var0: java_lang_Throwable | null): java_lang_Throwable | null;
    /**
     * @return original return type: 'java.lang.Class'
     */
    getClass(): Promise<java_lang_Class>;
    /**
     * @return original return type: 'java.lang.Class'
     */
    getClassSync(): java_lang_Class;
    /**
     * @param var0 original type: 'long'
     * @param var1 original type: 'int'
     * @return original return type: 'void'
     */
    wait(var0: java_lang_Long | bigint | number, var1: java_lang_Integer | number): Promise<void>;
    /**
     * @param var0 original type: 'long'
     * @param var1 original type: 'int'
     * @return original return type: 'void'
     */
    waitSync(var0: java_lang_Long | bigint | number, var1: java_lang_Integer | number): void;
    /**
     * @return original return type: 'void'
     */
    wait(): Promise<void>;
    /**
     * @return original return type: 'void'
     */
    waitSync(): void;
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'void'
     */
    wait(var0: java_lang_Long | bigint | number): Promise<void>;
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'void'
     */
    waitSync(var0: java_lang_Long | bigint | number): void;
    /**
     * @param var0 original type: 'int[]'
     * @return original return type: 'org.dcm4che3.net.service.DicomServiceException'
     */
    setOffendingElements(var0: (java_lang_Integer | number)[] | null): Promise<DicomServiceException | null>;
    /**
     * @param var0 original type: 'int[]'
     * @return original return type: 'org.dcm4che3.net.service.DicomServiceException'
     */
    setOffendingElementsSync(var0: (java_lang_Integer | number)[] | null): DicomServiceException | null;
    /**
     * @return original return type: 'java.lang.String'
     */
    getLocalizedMessage(): Promise<string | null>;
    /**
     * @return original return type: 'java.lang.String'
     */
    getLocalizedMessageSync(): string | null;
    /**
     * @return original return type: 'void'
     */
    notifyAll(): Promise<void>;
    /**
     * @return original return type: 'void'
     */
    notifyAllSync(): void;
    /**
     * @return original return type: 'int'
     */
    getStatus(): Promise<number>;
    /**
     * @return original return type: 'int'
     */
    getStatusSync(): number;
    /**
     * @param var0 original type: 'int'
     * @param var1 original type: 'java.lang.String'
     * @return original return type: 'org.dcm4che3.net.service.DicomServiceException'
     */
    setUID(var0: java_lang_Integer | number, var1: string | null): Promise<DicomServiceException | null>;
    /**
     * @param var0 original type: 'int'
     * @param var1 original type: 'java.lang.String'
     * @return original return type: 'org.dcm4che3.net.service.DicomServiceException'
     */
    setUIDSync(var0: java_lang_Integer | number, var1: string | null): DicomServiceException | null;
    /**
     * @return original return type: 'java.lang.Throwable'
     */
    getCause(): Promise<java_lang_Throwable | null>;
    /**
     * @return original return type: 'java.lang.Throwable'
     */
    getCauseSync(): java_lang_Throwable | null;
    /**
     * @return original return type: 'void'
     */
    notify(): Promise<void>;
    /**
     * @return original return type: 'void'
     */
    notifySync(): void;
    /**
     * @return original return type: 'org.dcm4che3.data.Attributes'
     */
    getDataset(): Promise<org_dcm4che3_data_Attributes | null>;
    /**
     * @return original return type: 'org.dcm4che3.data.Attributes'
     */
    getDatasetSync(): org_dcm4che3_data_Attributes | null;
    /**
     * @return original return type: 'java.lang.StackTraceElement[]'
     */
    getStackTrace(): Promise<(java_lang_StackTraceElement | null)[] | null>;
    /**
     * @return original return type: 'java.lang.StackTraceElement[]'
     */
    getStackTraceSync(): (java_lang_StackTraceElement | null)[] | null;
    /**
     * @param var0 original type: 'java.lang.Throwable'
     * @return original return type: 'void'
     */
    addSuppressed(var0: java_lang_Throwable | null): Promise<void>;
    /**
     * @param var0 original type: 'java.lang.Throwable'
     * @return original return type: 'void'
     */
    addSuppressedSync(var0: java_lang_Throwable | null): void;
    /**
     * @param var0 original type: 'int'
     * @return original return type: 'org.dcm4che3.net.service.DicomServiceException'
     */
    setEventTypeID(var0: java_lang_Integer | number): Promise<DicomServiceException | null>;
    /**
     * @param var0 original type: 'int'
     * @return original return type: 'org.dcm4che3.net.service.DicomServiceException'
     */
    setEventTypeIDSync(var0: java_lang_Integer | number): DicomServiceException | null;
    /**
     * @return original return type: 'int'
     */
    hashCode(): Promise<number>;
    /**
     * @return original return type: 'int'
     */
    hashCodeSync(): number;
    /**
     * @param var0 original type: 'int'
     * @param var1 original type: 'int'
     * @param var2 original type: 'int'
     * @return original return type: 'org.dcm4che3.net.service.DicomServiceException'
     */
    setNumberOfCompletedFailedWarningSuboperations(var0: java_lang_Integer | number, var1: java_lang_Integer | number, var2: java_lang_Integer | number): Promise<DicomServiceException | null>;
    /**
     * @param var0 original type: 'int'
     * @param var1 original type: 'int'
     * @param var2 original type: 'int'
     * @return original return type: 'org.dcm4che3.net.service.DicomServiceException'
     */
    setNumberOfCompletedFailedWarningSuboperationsSync(var0: java_lang_Integer | number, var1: java_lang_Integer | number, var2: java_lang_Integer | number): DicomServiceException | null;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'org.dcm4che3.net.service.DicomServiceException'
     */
    setErrorComment(var0: string | null): Promise<DicomServiceException | null>;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'org.dcm4che3.net.service.DicomServiceException'
     */
    setErrorCommentSync(var0: string | null): DicomServiceException | null;
    /**
     * @return original return type: 'java.lang.Throwable[]'
     */
    getSuppressed(): Promise<(java_lang_Throwable | null)[] | null>;
    /**
     * @return original return type: 'java.lang.Throwable[]'
     */
    getSuppressedSync(): (java_lang_Throwable | null)[] | null;
    /**
     * @param var0 original type: 'int'
     * @param var1 original type: 'int'
     * @return original return type: 'org.dcm4che3.data.Attributes'
     */
    mkRSP(var0: java_lang_Integer | number, var1: java_lang_Integer | number): Promise<org_dcm4che3_data_Attributes | null>;
    /**
     * @param var0 original type: 'int'
     * @param var1 original type: 'int'
     * @return original return type: 'org.dcm4che3.data.Attributes'
     */
    mkRSPSync(var0: java_lang_Integer | number, var1: java_lang_Integer | number): org_dcm4che3_data_Attributes | null;
    /**
     * @return original return type: 'void'
     */
    printStackTrace(): Promise<void>;
    /**
     * @return original return type: 'void'
     */
    printStackTraceSync(): void;
    /**
     * @param var0 original type: 'java.io.PrintWriter'
     * @return original return type: 'void'
     */
    printStackTrace(var0: java_io_PrintWriter | null): Promise<void>;
    /**
     * @param var0 original type: 'java.io.PrintWriter'
     * @return original return type: 'void'
     */
    printStackTraceSync(var0: java_io_PrintWriter | null): void;
    /**
     * @param var0 original type: 'java.io.PrintStream'
     * @return original return type: 'void'
     */
    printStackTrace(var0: java_io_PrintStream | null): Promise<void>;
    /**
     * @param var0 original type: 'java.io.PrintStream'
     * @return original return type: 'void'
     */
    printStackTraceSync(var0: java_io_PrintStream | null): void;
    /**
     * @param var0 original type: 'org.dcm4che3.data.ValidationResult'
     * @param var1 original type: 'org.dcm4che3.data.Attributes'
     * @return original return type: 'org.dcm4che3.net.service.DicomServiceException'
     */
    static valueOf(var0: org_dcm4che3_data_ValidationResult | null, var1: org_dcm4che3_data_Attributes | null): Promise<DicomServiceException | null>;
    /**
     * @param var0 original type: 'org.dcm4che3.data.ValidationResult'
     * @param var1 original type: 'org.dcm4che3.data.Attributes'
     * @return original return type: 'org.dcm4che3.net.service.DicomServiceException'
     */
    static valueOfSync(var0: org_dcm4che3_data_ValidationResult | null, var1: org_dcm4che3_data_Attributes | null): DicomServiceException | null;
    /**
     * @param var0 original type: 'int[]'
     * @return original return type: 'org.dcm4che3.net.service.DicomServiceException'
     */
    setAttributeIdentifierList(var0: (java_lang_Integer | number)[] | null): Promise<DicomServiceException | null>;
    /**
     * @param var0 original type: 'int[]'
     * @return original return type: 'org.dcm4che3.net.service.DicomServiceException'
     */
    setAttributeIdentifierListSync(var0: (java_lang_Integer | number)[] | null): DicomServiceException | null;
    /**
     * @param var0 original type: 'java.lang.Throwable'
     * @return original return type: 'java.lang.Throwable'
     */
    initCause(var0: java_lang_Throwable | null): Promise<java_lang_Throwable | null>;
    /**
     * @param var0 original type: 'java.lang.Throwable'
     * @return original return type: 'java.lang.Throwable'
     */
    initCauseSync(var0: java_lang_Throwable | null): java_lang_Throwable | null;
    /**
     * @return original return type: 'java.lang.String'
     */
    getMessage(): Promise<string | null>;
    /**
     * @return original return type: 'java.lang.String'
     */
    getMessageSync(): string | null;
    /**
     * @param var0 original type: 'org.dcm4che3.data.Attributes'
     * @return original return type: 'org.dcm4che3.net.service.DicomServiceException'
     */
    setDataset(var0: org_dcm4che3_data_Attributes | null): Promise<DicomServiceException | null>;
    /**
     * @param var0 original type: 'org.dcm4che3.data.Attributes'
     * @return original return type: 'org.dcm4che3.net.service.DicomServiceException'
     */
    setDatasetSync(var0: org_dcm4che3_data_Attributes | null): DicomServiceException | null;
    /**
     * @param var0 original type: 'int'
     * @return original return type: 'org.dcm4che3.net.service.DicomServiceException'
     */
    setActionTypeID(var0: java_lang_Integer | number): Promise<DicomServiceException | null>;
    /**
     * @param var0 original type: 'int'
     * @return original return type: 'org.dcm4che3.net.service.DicomServiceException'
     */
    setActionTypeIDSync(var0: java_lang_Integer | number): DicomServiceException | null;
    /**
     * @param var0 original type: 'java.lang.StackTraceElement[]'
     * @return original return type: 'void'
     */
    setStackTrace(var0: (java_lang_StackTraceElement | null)[] | null): Promise<void>;
    /**
     * @param var0 original type: 'java.lang.StackTraceElement[]'
     * @return original return type: 'void'
     */
    setStackTraceSync(var0: (java_lang_StackTraceElement | null)[] | null): void;
    /**
     * @param var0 original type: 'int'
     * @return original return type: 'org.dcm4che3.net.service.DicomServiceException'
     */
    setErrorID(var0: java_lang_Integer | number): Promise<DicomServiceException | null>;
    /**
     * @param var0 original type: 'int'
     * @return original return type: 'org.dcm4che3.net.service.DicomServiceException'
     */
    setErrorIDSync(var0: java_lang_Integer | number): DicomServiceException | null;
    /**
     * @param var0 original type: 'java.lang.Object'
     * @return original return type: 'boolean'
     */
    equals(var0: BasicOrJavaType | null): Promise<boolean>;
    /**
     * @param var0 original type: 'java.lang.Object'
     * @return original return type: 'boolean'
     */
    equalsSync(var0: BasicOrJavaType | null): boolean;
    /**
     * @return original return type: 'java.lang.Throwable'
     */
    fillInStackTrace(): Promise<java_lang_Throwable | null>;
    /**
     * @return original return type: 'java.lang.Throwable'
     */
    fillInStackTraceSync(): java_lang_Throwable | null;
    /**
     * @param var0 original type: 'int'
     * @param var1 original type: 'java.lang.Throwable'
     * @param var2 original type: 'boolean'
     */
    constructor(var0: java_lang_Integer | number, var1: java_lang_Throwable | null, var2: java_lang_Boolean | boolean);
    /**
     * @param var0 original type: 'int'
     * @param var1 original type: 'java.lang.Throwable'
     * @param var2 original type: 'boolean'
     * @return original return type: 'org.dcm4che3.net.service.DicomServiceException'
     */
    static newInstanceAsync(var0: java_lang_Integer | number, var1: java_lang_Throwable | null, var2: java_lang_Boolean | boolean): Promise<DicomServiceException>;
    /**
     * @param var0 original type: 'int'
     * @param var1 original type: 'java.lang.Throwable'
     */
    constructor(var0: java_lang_Integer | number, var1: java_lang_Throwable | null);
    /**
     * @param var0 original type: 'int'
     * @param var1 original type: 'java.lang.Throwable'
     * @return original return type: 'org.dcm4che3.net.service.DicomServiceException'
     */
    static newInstanceAsync(var0: java_lang_Integer | number, var1: java_lang_Throwable | null): Promise<DicomServiceException>;
    /**
     * @param var0 original type: 'int'
     * @param var1 original type: 'java.lang.String'
     * @param var2 original type: 'boolean'
     */
    constructor(var0: java_lang_Integer | number, var1: string | null, var2: java_lang_Boolean | boolean);
    /**
     * @param var0 original type: 'int'
     * @param var1 original type: 'java.lang.String'
     * @param var2 original type: 'boolean'
     * @return original return type: 'org.dcm4che3.net.service.DicomServiceException'
     */
    static newInstanceAsync(var0: java_lang_Integer | number, var1: string | null, var2: java_lang_Boolean | boolean): Promise<DicomServiceException>;
    /**
     * @param var0 original type: 'int'
     * @param var1 original type: 'java.lang.String'
     */
    constructor(var0: java_lang_Integer | number, var1: string | null);
    /**
     * @param var0 original type: 'int'
     * @param var1 original type: 'java.lang.String'
     * @return original return type: 'org.dcm4che3.net.service.DicomServiceException'
     */
    static newInstanceAsync(var0: java_lang_Integer | number, var1: string | null): Promise<DicomServiceException>;
    /**
     * @param var0 original type: 'int'
     */
    constructor(var0: java_lang_Integer | number);
    /**
     * @param var0 original type: 'int'
     * @return original return type: 'org.dcm4che3.net.service.DicomServiceException'
     */
    static newInstanceAsync(var0: java_lang_Integer | number): Promise<DicomServiceException>;
}
declare const DicomServiceException_base: typeof DicomServiceExceptionClass;
/**
 * Class org.dcm4che3.net.service.DicomServiceException.
 *
 * This actually imports the java class for further use.
 * The class {@link DicomServiceExceptionClass} only defines types, this is the class you should actually import.
 * Please note that this statement imports the underlying java class at runtime, which may take a while.
 * This was generated by java-bridge.
 * You should probably not edit this.
 */
export declare class DicomServiceException extends DicomServiceException_base {
}
export default DicomServiceException;
