import { JavaClass, BasicOrJavaType, JavaInterfaceProxy } from "java-bridge";
import { Class as java_lang_Class } from "./../../../java/lang/Class";
import { Long as java_lang_Long } from "./../../../java/lang/Long";
import { Integer as java_lang_Integer } from "./../../../java/lang/Integer";
import { List as java_util_List } from "./../../../java/util/List";
import { Path as java_nio_file_Path, PathInterface as java_nio_file_PathInterface } from "./../../../java/nio/file/Path";
import { ImageTranscodeParam as org_dcm4che3_img_ImageTranscodeParam } from "./ImageTranscodeParam";
import { OutputStream as java_io_OutputStream } from "./../../../java/io/OutputStream";
import { DicomTranscodeParam as org_dcm4che3_img_DicomTranscodeParam } from "./DicomTranscodeParam";
import { Editable as org_dcm4che3_img_util_Editable } from "./util/Editable";
import { MaskArea as org_dcm4che3_img_op_MaskArea } from "./op/MaskArea";
import { DicomImageReaderSpi as org_dcm4che3_img_DicomImageReaderSpi } from "./DicomImageReaderSpi";
/**
 * This class just defines types, you should import {@link Transcoder} instead of this.
 * This was generated by java-bridge.
 * You should probably not edit this.
 */
export declare class TranscoderClass extends JavaClass {
    /**
     * @return original return type: 'java.lang.Class'
     */
    getClass(): Promise<java_lang_Class>;
    /**
     * @return original return type: 'java.lang.Class'
     */
    getClassSync(): java_lang_Class;
    /**
     * @param var0 original type: 'long'
     * @param var1 original type: 'int'
     * @return original return type: 'void'
     */
    wait(var0: java_lang_Long | bigint | number, var1: java_lang_Integer | number): Promise<void>;
    /**
     * @param var0 original type: 'long'
     * @param var1 original type: 'int'
     * @return original return type: 'void'
     */
    waitSync(var0: java_lang_Long | bigint | number, var1: java_lang_Integer | number): void;
    /**
     * @return original return type: 'void'
     */
    wait(): Promise<void>;
    /**
     * @return original return type: 'void'
     */
    waitSync(): void;
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'void'
     */
    wait(var0: java_lang_Long | bigint | number): Promise<void>;
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'void'
     */
    waitSync(var0: java_lang_Long | bigint | number): void;
    /**
     * @param var0 original type: 'java.nio.file.Path'
     * @param var1 original type: 'java.nio.file.Path'
     * @param var2 original type: 'org.dcm4che3.img.ImageTranscodeParam'
     * @return original return type: 'java.util.List'
     */
    static dcm2image(var0: java_nio_file_Path | JavaInterfaceProxy<java_nio_file_PathInterface> | null, var1: java_nio_file_Path | JavaInterfaceProxy<java_nio_file_PathInterface> | null, var2: org_dcm4che3_img_ImageTranscodeParam | null): Promise<java_util_List | null>;
    /**
     * @param var0 original type: 'java.nio.file.Path'
     * @param var1 original type: 'java.nio.file.Path'
     * @param var2 original type: 'org.dcm4che3.img.ImageTranscodeParam'
     * @return original return type: 'java.util.List'
     */
    static dcm2imageSync(var0: java_nio_file_Path | JavaInterfaceProxy<java_nio_file_PathInterface> | null, var1: java_nio_file_Path | JavaInterfaceProxy<java_nio_file_PathInterface> | null, var2: org_dcm4che3_img_ImageTranscodeParam | null): java_util_List | null;
    /**
     * @return original return type: 'int'
     */
    hashCode(): Promise<number>;
    /**
     * @return original return type: 'int'
     */
    hashCodeSync(): number;
    /**
     * @param var0 original type: 'java.lang.Object'
     * @return original return type: 'boolean'
     */
    equals(var0: BasicOrJavaType | null): Promise<boolean>;
    /**
     * @param var0 original type: 'java.lang.Object'
     * @return original return type: 'boolean'
     */
    equalsSync(var0: BasicOrJavaType | null): boolean;
    /**
     * @return original return type: 'void'
     */
    notifyAll(): Promise<void>;
    /**
     * @return original return type: 'void'
     */
    notifyAllSync(): void;
    /**
     * @param var0 original type: 'java.nio.file.Path'
     * @param var1 original type: 'java.io.OutputStream'
     * @param var2 original type: 'org.dcm4che3.img.DicomTranscodeParam'
     * @return original return type: 'void'
     */
    static dcm2dcm(var0: java_nio_file_Path | JavaInterfaceProxy<java_nio_file_PathInterface> | null, var1: java_io_OutputStream | null, var2: org_dcm4che3_img_DicomTranscodeParam | null): Promise<void>;
    /**
     * @param var0 original type: 'java.nio.file.Path'
     * @param var1 original type: 'java.io.OutputStream'
     * @param var2 original type: 'org.dcm4che3.img.DicomTranscodeParam'
     * @return original return type: 'void'
     */
    static dcm2dcmSync(var0: java_nio_file_Path | JavaInterfaceProxy<java_nio_file_PathInterface> | null, var1: java_io_OutputStream | null, var2: org_dcm4che3_img_DicomTranscodeParam | null): void;
    /**
     * @param var0 original type: 'java.nio.file.Path'
     * @param var1 original type: 'java.nio.file.Path'
     * @param var2 original type: 'org.dcm4che3.img.DicomTranscodeParam'
     * @return original return type: 'java.nio.file.Path'
     */
    static dcm2dcm(var0: java_nio_file_Path | JavaInterfaceProxy<java_nio_file_PathInterface> | null, var1: java_nio_file_Path | JavaInterfaceProxy<java_nio_file_PathInterface> | null, var2: org_dcm4che3_img_DicomTranscodeParam | null): Promise<java_nio_file_Path | null>;
    /**
     * @param var0 original type: 'java.nio.file.Path'
     * @param var1 original type: 'java.nio.file.Path'
     * @param var2 original type: 'org.dcm4che3.img.DicomTranscodeParam'
     * @return original return type: 'java.nio.file.Path'
     */
    static dcm2dcmSync(var0: java_nio_file_Path | JavaInterfaceProxy<java_nio_file_PathInterface> | null, var1: java_nio_file_Path | JavaInterfaceProxy<java_nio_file_PathInterface> | null, var2: org_dcm4che3_img_DicomTranscodeParam | null): java_nio_file_Path | null;
    /**
     * @param var0 original type: 'org.dcm4che3.img.op.MaskArea'
     * @return original return type: 'org.dcm4che3.img.util.Editable'
     */
    static getMaskedImage(var0: org_dcm4che3_img_op_MaskArea | null): Promise<org_dcm4che3_img_util_Editable | null>;
    /**
     * @param var0 original type: 'org.dcm4che3.img.op.MaskArea'
     * @return original return type: 'org.dcm4che3.img.util.Editable'
     */
    static getMaskedImageSync(var0: org_dcm4che3_img_op_MaskArea | null): org_dcm4che3_img_util_Editable | null;
    /**
     * @return original return type: 'void'
     */
    notify(): Promise<void>;
    /**
     * @return original return type: 'void'
     */
    notifySync(): void;
    /**
     * Original type: 'org.dcm4che3.img.DicomImageReaderSpi'
     */
    static readonly dicomImageReaderSpi: org_dcm4che3_img_DicomImageReaderSpi | null;
    constructor();
    /**
     * @return original return type: 'org.dcm4che3.img.Transcoder'
     */
    static newInstanceAsync(): Promise<Transcoder>;
}
declare const Transcoder_base: typeof TranscoderClass;
/**
 * Class org.dcm4che3.img.Transcoder.
 *
 * This actually imports the java class for further use.
 * The class {@link TranscoderClass} only defines types, this is the class you should actually import.
 * Please note that this statement imports the underlying java class at runtime, which may take a while.
 * This was generated by java-bridge.
 * You should probably not edit this.
 */
export declare class Transcoder extends Transcoder_base {
}
export default Transcoder;
