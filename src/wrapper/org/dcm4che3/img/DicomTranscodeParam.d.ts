import { JavaClass, BasicOrJavaType, JavaInterfaceProxy } from "java-bridge";
import { MaskArea as org_dcm4che3_img_op_MaskArea } from "./op/MaskArea";
import { Class as java_lang_Class } from "./../../../java/lang/Class";
import { Long as java_lang_Long } from "./../../../java/lang/Long";
import { Integer as java_lang_Integer } from "./../../../java/lang/Integer";
import { DicomJpegWriteParam as org_dcm4che3_img_DicomJpegWriteParam } from "./DicomJpegWriteParam";
import { Boolean as java_lang_Boolean } from "./../../../java/lang/Boolean";
import { DicomImageReadParam as org_dcm4che3_img_DicomImageReadParam } from "./DicomImageReadParam";
import { Map as java_util_Map, MapInterface as java_util_MapInterface } from "./../../../java/util/Map";
/**
 * This class just defines types, you should import {@link DicomTranscodeParam} instead of this.
 * This was generated by java-bridge.
 * You should probably not edit this.
 */
export declare class DicomTranscodeParamClass extends JavaClass {
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'org.dcm4che3.img.op.MaskArea'
     */
    getMask(var0: string | null): Promise<org_dcm4che3_img_op_MaskArea | null>;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'org.dcm4che3.img.op.MaskArea'
     */
    getMaskSync(var0: string | null): org_dcm4che3_img_op_MaskArea | null;
    /**
     * @return original return type: 'java.lang.Class'
     */
    getClass(): Promise<java_lang_Class>;
    /**
     * @return original return type: 'java.lang.Class'
     */
    getClassSync(): java_lang_Class;
    /**
     * @param var0 original type: 'long'
     * @param var1 original type: 'int'
     * @return original return type: 'void'
     */
    wait(var0: java_lang_Long | bigint | number, var1: java_lang_Integer | number): Promise<void>;
    /**
     * @param var0 original type: 'long'
     * @param var1 original type: 'int'
     * @return original return type: 'void'
     */
    waitSync(var0: java_lang_Long | bigint | number, var1: java_lang_Integer | number): void;
    /**
     * @return original return type: 'void'
     */
    wait(): Promise<void>;
    /**
     * @return original return type: 'void'
     */
    waitSync(): void;
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'void'
     */
    wait(var0: java_lang_Long | bigint | number): Promise<void>;
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'void'
     */
    waitSync(var0: java_lang_Long | bigint | number): void;
    /**
     * @return original return type: 'org.dcm4che3.img.DicomJpegWriteParam'
     */
    getWriteJpegParam(): Promise<org_dcm4che3_img_DicomJpegWriteParam | null>;
    /**
     * @return original return type: 'org.dcm4che3.img.DicomJpegWriteParam'
     */
    getWriteJpegParamSync(): org_dcm4che3_img_DicomJpegWriteParam | null;
    /**
     * @return original return type: 'void'
     */
    notifyAll(): Promise<void>;
    /**
     * @return original return type: 'void'
     */
    notifyAllSync(): void;
    /**
     * @param var0 original type: 'java.lang.String'
     * @param var1 original type: 'org.dcm4che3.img.op.MaskArea'
     * @return original return type: 'void'
     */
    addMask(var0: string | null, var1: org_dcm4che3_img_op_MaskArea | null): Promise<void>;
    /**
     * @param var0 original type: 'java.lang.String'
     * @param var1 original type: 'org.dcm4che3.img.op.MaskArea'
     * @return original return type: 'void'
     */
    addMaskSync(var0: string | null, var1: org_dcm4che3_img_op_MaskArea | null): void;
    /**
     * @return original return type: 'java.lang.String'
     */
    getOutputTsuid(): Promise<string | null>;
    /**
     * @return original return type: 'java.lang.String'
     */
    getOutputTsuidSync(): string | null;
    /**
     * @return original return type: 'void'
     */
    notify(): Promise<void>;
    /**
     * @return original return type: 'void'
     */
    notifySync(): void;
    /**
     * @param var0 original type: 'boolean'
     * @return original return type: 'void'
     */
    setOutputFmi(var0: java_lang_Boolean | boolean): Promise<void>;
    /**
     * @param var0 original type: 'boolean'
     * @return original return type: 'void'
     */
    setOutputFmiSync(var0: java_lang_Boolean | boolean): void;
    /**
     * @return original return type: 'org.dcm4che3.img.DicomImageReadParam'
     */
    getReadParam(): Promise<org_dcm4che3_img_DicomImageReadParam | null>;
    /**
     * @return original return type: 'org.dcm4che3.img.DicomImageReadParam'
     */
    getReadParamSync(): org_dcm4che3_img_DicomImageReadParam | null;
    /**
     * @return original return type: 'int'
     */
    hashCode(): Promise<number>;
    /**
     * @return original return type: 'int'
     */
    hashCodeSync(): number;
    /**
     * @param var0 original type: 'java.lang.Object'
     * @return original return type: 'boolean'
     */
    equals(var0: BasicOrJavaType | null): Promise<boolean>;
    /**
     * @param var0 original type: 'java.lang.Object'
     * @return original return type: 'boolean'
     */
    equalsSync(var0: BasicOrJavaType | null): boolean;
    /**
     * @return original return type: 'java.util.Map'
     */
    getMaskMap(): Promise<java_util_Map | null>;
    /**
     * @return original return type: 'java.util.Map'
     */
    getMaskMapSync(): java_util_Map | null;
    /**
     * @return original return type: 'boolean'
     */
    isOutputFmi(): Promise<boolean>;
    /**
     * @return original return type: 'boolean'
     */
    isOutputFmiSync(): boolean;
    /**
     * @param var0 original type: 'java.util.Map'
     * @return original return type: 'void'
     */
    addMaskMap(var0: java_util_Map | JavaInterfaceProxy<java_util_MapInterface> | null): Promise<void>;
    /**
     * @param var0 original type: 'java.util.Map'
     * @return original return type: 'void'
     */
    addMaskMapSync(var0: java_util_Map | JavaInterfaceProxy<java_util_MapInterface> | null): void;
    /**
     * @param var0 original type: 'java.lang.String'
     */
    constructor(var0: string | null);
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'org.dcm4che3.img.DicomTranscodeParam'
     */
    static newInstanceAsync(var0: string | null): Promise<DicomTranscodeParam>;
    /**
     * @param var0 original type: 'org.dcm4che3.img.DicomImageReadParam'
     * @param var1 original type: 'java.lang.String'
     */
    constructor(var0: org_dcm4che3_img_DicomImageReadParam | null, var1: string | null);
    /**
     * @param var0 original type: 'org.dcm4che3.img.DicomImageReadParam'
     * @param var1 original type: 'java.lang.String'
     * @return original return type: 'org.dcm4che3.img.DicomTranscodeParam'
     */
    static newInstanceAsync(var0: org_dcm4che3_img_DicomImageReadParam | null, var1: string | null): Promise<DicomTranscodeParam>;
}
declare const DicomTranscodeParam_base: typeof DicomTranscodeParamClass;
/**
 * Class org.dcm4che3.img.DicomTranscodeParam.
 *
 * This actually imports the java class for further use.
 * The class {@link DicomTranscodeParamClass} only defines types, this is the class you should actually import.
 * Please note that this statement imports the underlying java class at runtime, which may take a while.
 * This was generated by java-bridge.
 * You should probably not edit this.
 */
export declare class DicomTranscodeParam extends DicomTranscodeParam_base {
}
export default DicomTranscodeParam;
//# sourceMappingURL=DicomTranscodeParam.d.ts.map