import { JavaClass, BasicOrJavaType, InterfaceProxyOptions, JavaInterfaceProxy } from "java-bridge";
/**
 * This class just defines types, you should import {@link Editable} instead of this.
 * This was generated by java-bridge.
 * You should probably not edit this.
 */
export declare class EditableClass extends JavaClass {
    /**
     * @param var0 original type: 'java.lang.Object'
     * @return original return type: 'java.lang.Object'
     */
    process(var0: BasicOrJavaType | null): Promise<BasicOrJavaType | null>;
    /**
     * @param var0 original type: 'java.lang.Object'
     * @return original return type: 'java.lang.Object'
     */
    processSync(var0: BasicOrJavaType | null): BasicOrJavaType | null;
}
/**
 * This interface just defines types for creating proxies,
 * you should use {@link createEditableProxy} for actually creating the proxies.
 *
 * Optional methods in here may still be required by java.
 * This is caused by typescript not allowing to have both optional and
 * non-optional signatures for the same interface member.
 *
 * This was generated by java-bridge.
 * You should probably not edit this.
 */
export interface EditableInterface {
    /**
     * @param var0 original type: 'java.lang.Object'
     * @return original return type: 'java.lang.Object'
     */
    process(var0: BasicOrJavaType | null): BasicOrJavaType | null;
}
/**
 * Create a proxy for the {@link Editable} interface.
 * All required methods in {@link EditableInterface} must be implemented.
 *
 * @param methods the methods to implement
 * @param opts the proxy options
 * @return the proxy
 */
export declare function createEditableProxy(methods: EditableInterface, opts?: InterfaceProxyOptions): JavaInterfaceProxy<EditableInterface>;
declare const Editable_base: typeof EditableClass;
/**
 * Class org.dcm4che3.img.util.Editable.
 *
 * This actually imports the java class for further use.
 * The class {@link EditableClass} only defines types, this is the class you should actually import.
 * Please note that this statement imports the underlying java class at runtime, which may take a while.
 * This was generated by java-bridge.
 * You should probably not edit this.
 */
export declare class Editable extends Editable_base {
    /**
     * Private constructor to prevent instantiation
     * as this is either an abstract class or an interface
     */
    private constructor();
}
export default Editable;
//# sourceMappingURL=Editable.d.ts.map