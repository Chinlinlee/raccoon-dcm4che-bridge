import { JavaClass, BasicOrJavaType, JavaInterfaceProxy } from "java-bridge";
import { Class as java_lang_Class } from "./../../../../java/lang/Class";
import { Long as java_lang_Long } from "./../../../../java/lang/Long";
import { Integer as java_lang_Integer } from "./../../../../java/lang/Integer";
import { Color as java_awt_Color } from "./../../../../java/awt/Color";
import { List as java_util_List, ListInterface as java_util_ListInterface } from "./../../../../java/util/List";
import { ImageCV as org_weasis_opencv_data_ImageCV } from "./../../../weasis/opencv/data/ImageCV";
import { Mat as org_opencv_core_Mat } from "./../../../opencv/core/Mat";
/**
 * This class just defines types, you should import {@link MaskArea} instead of this.
 * This was generated by java-bridge.
 * You should probably not edit this.
 */
export declare class MaskAreaClass extends JavaClass {
    /**
     * @return original return type: 'java.lang.Class'
     */
    getClass(): Promise<java_lang_Class>;
    /**
     * @return original return type: 'java.lang.Class'
     */
    getClassSync(): java_lang_Class;
    /**
     * @param var0 original type: 'long'
     * @param var1 original type: 'int'
     * @return original return type: 'void'
     */
    wait(var0: java_lang_Long | bigint | number, var1: java_lang_Integer | number): Promise<void>;
    /**
     * @param var0 original type: 'long'
     * @param var1 original type: 'int'
     * @return original return type: 'void'
     */
    waitSync(var0: java_lang_Long | bigint | number, var1: java_lang_Integer | number): void;
    /**
     * @return original return type: 'void'
     */
    wait(): Promise<void>;
    /**
     * @return original return type: 'void'
     */
    waitSync(): void;
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'void'
     */
    wait(var0: java_lang_Long | bigint | number): Promise<void>;
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'void'
     */
    waitSync(var0: java_lang_Long | bigint | number): void;
    /**
     * @return original return type: 'int'
     */
    hashCode(): Promise<number>;
    /**
     * @return original return type: 'int'
     */
    hashCodeSync(): number;
    /**
     * @param var0 original type: 'java.lang.Object'
     * @return original return type: 'boolean'
     */
    equals(var0: BasicOrJavaType | null): Promise<boolean>;
    /**
     * @param var0 original type: 'java.lang.Object'
     * @return original return type: 'boolean'
     */
    equalsSync(var0: BasicOrJavaType | null): boolean;
    /**
     * @return original return type: 'void'
     */
    notifyAll(): Promise<void>;
    /**
     * @return original return type: 'void'
     */
    notifyAllSync(): void;
    /**
     * @return original return type: 'java.awt.Color'
     */
    getColor(): Promise<java_awt_Color | null>;
    /**
     * @return original return type: 'java.awt.Color'
     */
    getColorSync(): java_awt_Color | null;
    /**
     * @return original return type: 'java.util.List'
     */
    getShapeList(): Promise<java_util_List | null>;
    /**
     * @return original return type: 'java.util.List'
     */
    getShapeListSync(): java_util_List | null;
    /**
     * @param var0 original type: 'org.opencv.core.Mat'
     * @param var1 original type: 'org.dcm4che3.img.op.MaskArea'
     * @return original return type: 'org.weasis.opencv.data.ImageCV'
     */
    static drawShape(var0: org_opencv_core_Mat | null, var1: MaskAreaClass | null): Promise<org_weasis_opencv_data_ImageCV | null>;
    /**
     * @param var0 original type: 'org.opencv.core.Mat'
     * @param var1 original type: 'org.dcm4che3.img.op.MaskArea'
     * @return original return type: 'org.weasis.opencv.data.ImageCV'
     */
    static drawShapeSync(var0: org_opencv_core_Mat | null, var1: MaskAreaClass | null): org_weasis_opencv_data_ImageCV | null;
    /**
     * @return original return type: 'void'
     */
    notify(): Promise<void>;
    /**
     * @return original return type: 'void'
     */
    notifySync(): void;
    /**
     * @param var0 original type: 'java.util.List'
     */
    constructor(var0: java_util_List | JavaInterfaceProxy<java_util_ListInterface> | null);
    /**
     * @param var0 original type: 'java.util.List'
     * @return original return type: 'org.dcm4che3.img.op.MaskArea'
     */
    static newInstanceAsync(var0: java_util_List | JavaInterfaceProxy<java_util_ListInterface> | null): Promise<MaskArea>;
    /**
     * @param var0 original type: 'java.util.List'
     * @param var1 original type: 'java.awt.Color'
     */
    constructor(var0: java_util_List | JavaInterfaceProxy<java_util_ListInterface> | null, var1: java_awt_Color | null);
    /**
     * @param var0 original type: 'java.util.List'
     * @param var1 original type: 'java.awt.Color'
     * @return original return type: 'org.dcm4che3.img.op.MaskArea'
     */
    static newInstanceAsync(var0: java_util_List | JavaInterfaceProxy<java_util_ListInterface> | null, var1: java_awt_Color | null): Promise<MaskArea>;
}
declare const MaskArea_base: typeof MaskAreaClass;
/**
 * Class org.dcm4che3.img.op.MaskArea.
 *
 * This actually imports the java class for further use.
 * The class {@link MaskAreaClass} only defines types, this is the class you should actually import.
 * Please note that this statement imports the underlying java class at runtime, which may take a while.
 * This was generated by java-bridge.
 * You should probably not edit this.
 */
export declare class MaskArea extends MaskArea_base {
}
export default MaskArea;
