import { JavaClass, BasicOrJavaType } from "java-bridge";
import { Class as java_lang_Class } from "./../../../../java/lang/Class";
import { Long as java_lang_Long } from "./../../../../java/lang/Long";
import { Integer as java_lang_Integer } from "./../../../../java/lang/Integer";
import { Attributes as org_dcm4che3_data_Attributes } from "./../../data/Attributes";
import { Properties as java_util_Properties } from "./../../../../java/util/Properties";
/**
 * This class just defines types, you should import {@link CLIUtils} instead of this.
 * This was generated by java-bridge.
 * You should probably not edit this.
 */
export declare class CLIUtilsClass extends JavaClass {
    /**
     * @return original return type: 'java.lang.Class'
     */
    getClass(): Promise<java_lang_Class>;
    /**
     * @return original return type: 'java.lang.Class'
     */
    getClassSync(): java_lang_Class;
    /**
     * @param var0 original type: 'java.lang.String[]'
     * @return original return type: 'int[]'
     */
    static toTags(var0: (string | null)[] | null): Promise<(number)[] | null>;
    /**
     * @param var0 original type: 'java.lang.String[]'
     * @return original return type: 'int[]'
     */
    static toTagsSync(var0: (string | null)[] | null): (number)[] | null;
    /**
     * @param var0 original type: 'long'
     * @param var1 original type: 'int'
     * @return original return type: 'void'
     */
    wait(var0: java_lang_Long | bigint | number, var1: java_lang_Integer | number): Promise<void>;
    /**
     * @param var0 original type: 'long'
     * @param var1 original type: 'int'
     * @return original return type: 'void'
     */
    waitSync(var0: java_lang_Long | bigint | number, var1: java_lang_Integer | number): void;
    /**
     * @return original return type: 'void'
     */
    wait(): Promise<void>;
    /**
     * @return original return type: 'void'
     */
    waitSync(): void;
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'void'
     */
    wait(var0: java_lang_Long | bigint | number): Promise<void>;
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'void'
     */
    waitSync(var0: java_lang_Long | bigint | number): void;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'java.lang.String'
     */
    static toUID(var0: string | null): Promise<string | null>;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'java.lang.String'
     */
    static toUIDSync(var0: string | null): string | null;
    /**
     * @param var0 original type: 'org.dcm4che3.data.Attributes'
     * @param var1 original type: 'java.lang.String[]'
     * @return original return type: 'void'
     */
    static addAttributes(var0: org_dcm4che3_data_Attributes | null, var1: (string | null)[] | null): Promise<void>;
    /**
     * @param var0 original type: 'org.dcm4che3.data.Attributes'
     * @param var1 original type: 'java.lang.String[]'
     * @return original return type: 'void'
     */
    static addAttributesSync(var0: org_dcm4che3_data_Attributes | null, var1: (string | null)[] | null): void;
    /**
     * @param var0 original type: 'org.dcm4che3.data.Attributes'
     * @param var1 original type: 'int[]'
     * @param var2 original type: 'java.lang.String[]'
     * @return original return type: 'void'
     */
    static addAttributes(var0: org_dcm4che3_data_Attributes | null, var1: (java_lang_Integer | number)[] | null, var2: (string | null)[] | null): Promise<void>;
    /**
     * @param var0 original type: 'org.dcm4che3.data.Attributes'
     * @param var1 original type: 'int[]'
     * @param var2 original type: 'java.lang.String[]'
     * @return original return type: 'void'
     */
    static addAttributesSync(var0: org_dcm4che3_data_Attributes | null, var1: (java_lang_Integer | number)[] | null, var2: (string | null)[] | null): void;
    /**
     * @return original return type: 'void'
     */
    notifyAll(): Promise<void>;
    /**
     * @return original return type: 'void'
     */
    notifyAllSync(): void;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'java.lang.String[]'
     */
    static toUIDs(var0: string | null): Promise<(string | null)[] | null>;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'java.lang.String[]'
     */
    static toUIDsSync(var0: string | null): (string | null)[] | null;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'int'
     */
    static toTag(var0: string | null): Promise<number>;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'int'
     */
    static toTagSync(var0: string | null): number;
    /**
     * @param var0 original type: 'org.dcm4che3.data.Attributes'
     * @param var1 original type: 'org.dcm4che3.data.Attributes'
     * @param var2 original type: 'java.lang.String'
     * @return original return type: 'boolean'
     */
    static updateAttributes(var0: org_dcm4che3_data_Attributes | null, var1: org_dcm4che3_data_Attributes | null, var2: string | null): Promise<boolean>;
    /**
     * @param var0 original type: 'org.dcm4che3.data.Attributes'
     * @param var1 original type: 'org.dcm4che3.data.Attributes'
     * @param var2 original type: 'java.lang.String'
     * @return original return type: 'boolean'
     */
    static updateAttributesSync(var0: org_dcm4che3_data_Attributes | null, var1: org_dcm4che3_data_Attributes | null, var2: string | null): boolean;
    /**
     * @return original return type: 'void'
     */
    notify(): Promise<void>;
    /**
     * @return original return type: 'void'
     */
    notifySync(): void;
    /**
     * @return original return type: 'int'
     */
    hashCode(): Promise<number>;
    /**
     * @return original return type: 'int'
     */
    hashCodeSync(): number;
    /**
     * @param var0 original type: 'java.lang.Object'
     * @return original return type: 'boolean'
     */
    equals(var0: BasicOrJavaType | null): Promise<boolean>;
    /**
     * @param var0 original type: 'java.lang.Object'
     * @return original return type: 'boolean'
     */
    equalsSync(var0: BasicOrJavaType | null): boolean;
    /**
     * @param var0 original type: 'org.dcm4che3.data.Attributes'
     * @param var1 original type: 'java.lang.String[]'
     * @return original return type: 'void'
     */
    static addEmptyAttributes(var0: org_dcm4che3_data_Attributes | null, var1: (string | null)[] | null): Promise<void>;
    /**
     * @param var0 original type: 'org.dcm4che3.data.Attributes'
     * @param var1 original type: 'java.lang.String[]'
     * @return original return type: 'void'
     */
    static addEmptyAttributesSync(var0: org_dcm4che3_data_Attributes | null, var1: (string | null)[] | null): void;
    /**
     * @param var0 original type: 'java.lang.String'
     * @param var1 original type: 'java.util.Properties'
     * @return original return type: 'java.util.Properties'
     */
    static loadProperties(var0: string | null, var1: java_util_Properties | null): Promise<java_util_Properties | null>;
    /**
     * @param var0 original type: 'java.lang.String'
     * @param var1 original type: 'java.util.Properties'
     * @return original return type: 'java.util.Properties'
     */
    static loadPropertiesSync(var0: string | null, var1: java_util_Properties | null): java_util_Properties | null;
    constructor();
    /**
     * @return original return type: 'org.dcm4che3.tool.common.CLIUtils'
     */
    static newInstanceAsync(): Promise<CLIUtils>;
}
declare const CLIUtils_base: typeof CLIUtilsClass;
/**
 * Class org.dcm4che3.tool.common.CLIUtils.
 *
 * This actually imports the java class for further use.
 * The class {@link CLIUtilsClass} only defines types, this is the class you should actually import.
 * Please note that this statement imports the underlying java class at runtime, which may take a while.
 * This was generated by java-bridge.
 * You should probably not edit this.
 */
export declare class CLIUtils extends CLIUtils_base {
}
export default CLIUtils;
