import { JavaClass, InterfaceProxyOptions, JavaInterfaceProxy } from "java-bridge";
import { Node as org_w3c_dom_Node, NodeInterface as org_w3c_dom_NodeInterface } from "./Node";
import { Integer as java_lang_Integer } from "./../../../java/lang/Integer";
/**
 * This class just defines types, you should import {@link NamedNodeMap} instead of this.
 * This was generated by java-bridge.
 * You should probably not edit this.
 */
export declare class NamedNodeMapClass extends JavaClass {
    /**
     * @param var0 original type: 'int'
     * @return original return type: 'org.w3c.dom.Node'
     */
    item(var0: java_lang_Integer | number): Promise<org_w3c_dom_Node | null>;
    /**
     * @param var0 original type: 'int'
     * @return original return type: 'org.w3c.dom.Node'
     */
    itemSync(var0: java_lang_Integer | number): org_w3c_dom_Node | null;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'org.w3c.dom.Node'
     */
    removeNamedItem(var0: string | null): Promise<org_w3c_dom_Node | null>;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'org.w3c.dom.Node'
     */
    removeNamedItemSync(var0: string | null): org_w3c_dom_Node | null;
    /**
     * @param var0 original type: 'org.w3c.dom.Node'
     * @return original return type: 'org.w3c.dom.Node'
     */
    setNamedItem(var0: org_w3c_dom_Node | JavaInterfaceProxy<org_w3c_dom_NodeInterface> | null): Promise<org_w3c_dom_Node | null>;
    /**
     * @param var0 original type: 'org.w3c.dom.Node'
     * @return original return type: 'org.w3c.dom.Node'
     */
    setNamedItemSync(var0: org_w3c_dom_Node | JavaInterfaceProxy<org_w3c_dom_NodeInterface> | null): org_w3c_dom_Node | null;
    /**
     * @param var0 original type: 'java.lang.String'
     * @param var1 original type: 'java.lang.String'
     * @return original return type: 'org.w3c.dom.Node'
     */
    getNamedItemNS(var0: string | null, var1: string | null): Promise<org_w3c_dom_Node | null>;
    /**
     * @param var0 original type: 'java.lang.String'
     * @param var1 original type: 'java.lang.String'
     * @return original return type: 'org.w3c.dom.Node'
     */
    getNamedItemNSSync(var0: string | null, var1: string | null): org_w3c_dom_Node | null;
    /**
     * @return original return type: 'int'
     */
    getLength(): Promise<number>;
    /**
     * @return original return type: 'int'
     */
    getLengthSync(): number;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'org.w3c.dom.Node'
     */
    getNamedItem(var0: string | null): Promise<org_w3c_dom_Node | null>;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'org.w3c.dom.Node'
     */
    getNamedItemSync(var0: string | null): org_w3c_dom_Node | null;
    /**
     * @param var0 original type: 'org.w3c.dom.Node'
     * @return original return type: 'org.w3c.dom.Node'
     */
    setNamedItemNS(var0: org_w3c_dom_Node | JavaInterfaceProxy<org_w3c_dom_NodeInterface> | null): Promise<org_w3c_dom_Node | null>;
    /**
     * @param var0 original type: 'org.w3c.dom.Node'
     * @return original return type: 'org.w3c.dom.Node'
     */
    setNamedItemNSSync(var0: org_w3c_dom_Node | JavaInterfaceProxy<org_w3c_dom_NodeInterface> | null): org_w3c_dom_Node | null;
    /**
     * @param var0 original type: 'java.lang.String'
     * @param var1 original type: 'java.lang.String'
     * @return original return type: 'org.w3c.dom.Node'
     */
    removeNamedItemNS(var0: string | null, var1: string | null): Promise<org_w3c_dom_Node | null>;
    /**
     * @param var0 original type: 'java.lang.String'
     * @param var1 original type: 'java.lang.String'
     * @return original return type: 'org.w3c.dom.Node'
     */
    removeNamedItemNSSync(var0: string | null, var1: string | null): org_w3c_dom_Node | null;
}
/**
 * This interface just defines types for creating proxies,
 * you should use {@link createNamedNodeMapProxy} for actually creating the proxies.
 *
 * Optional methods in here may still be required by java.
 * This is caused by typescript not allowing to have both optional and
 * non-optional signatures for the same interface member.
 *
 * This was generated by java-bridge.
 * You should probably not edit this.
 */
export interface NamedNodeMapInterface {
    /**
     * @param var0 original type: 'int'
     * @return original return type: 'org.w3c.dom.Node'
     */
    item(var0: java_lang_Integer | number): org_w3c_dom_Node | null;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'org.w3c.dom.Node'
     */
    removeNamedItem(var0: string | null): org_w3c_dom_Node | null;
    /**
     * @param var0 original type: 'org.w3c.dom.Node'
     * @return original return type: 'org.w3c.dom.Node'
     */
    setNamedItem(var0: org_w3c_dom_Node | JavaInterfaceProxy<org_w3c_dom_NodeInterface> | null): org_w3c_dom_Node | null;
    /**
     * @param var0 original type: 'java.lang.String'
     * @param var1 original type: 'java.lang.String'
     * @return original return type: 'org.w3c.dom.Node'
     */
    getNamedItemNS(var0: string | null, var1: string | null): org_w3c_dom_Node | null;
    /**
     * @return original return type: 'int'
     */
    getLength(): number;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'org.w3c.dom.Node'
     */
    getNamedItem(var0: string | null): org_w3c_dom_Node | null;
    /**
     * @param var0 original type: 'org.w3c.dom.Node'
     * @return original return type: 'org.w3c.dom.Node'
     */
    setNamedItemNS(var0: org_w3c_dom_Node | JavaInterfaceProxy<org_w3c_dom_NodeInterface> | null): org_w3c_dom_Node | null;
    /**
     * @param var0 original type: 'java.lang.String'
     * @param var1 original type: 'java.lang.String'
     * @return original return type: 'org.w3c.dom.Node'
     */
    removeNamedItemNS(var0: string | null, var1: string | null): org_w3c_dom_Node | null;
}
/**
 * Create a proxy for the {@link NamedNodeMap} interface.
 * All required methods in {@link NamedNodeMapInterface} must be implemented.
 *
 * @param methods the methods to implement
 * @param opts the proxy options
 * @return the proxy
 */
export declare function createNamedNodeMapProxy(methods: NamedNodeMapInterface, opts?: InterfaceProxyOptions): JavaInterfaceProxy<NamedNodeMapInterface>;
declare const NamedNodeMap_base: typeof NamedNodeMapClass;
/**
 * Class org.w3c.dom.NamedNodeMap.
 *
 * This actually imports the java class for further use.
 * The class {@link NamedNodeMapClass} only defines types, this is the class you should actually import.
 * Please note that this statement imports the underlying java class at runtime, which may take a while.
 * This was generated by java-bridge.
 * You should probably not edit this.
 */
export declare class NamedNodeMap extends NamedNodeMap_base {
    /**
     * Private constructor to prevent instantiation
     * as this is either an abstract class or an interface
     */
    private constructor();
}
export default NamedNodeMap;
